JAVA INTRODUCTION : Subadharshini 

- Java was introduced in 1995 by James Gosling at Sun Microsystems.
- James Gosling is considered as the father of Java.
- Java can used on many platforms and devices.
- Java is used to create mobile devices, softwares, web apss, desktop apps etc. etc.
- Java Code is processed through a compiler which translated our code into bytecode that an operating system can read.

Our JAVA Code -------------> Compiler -----------> byteCode (001110010101010101) ------> OS can read

- Java is a programming language.

==================================================


Java Key Features : 

- Object Oriented : Java uses the concepts like classes and objects. Java is a Object Oriented Language.
- Platform Independence : It works on the concept of WORA (Write Once and Run Anywhere)

Lets say we can write the code on Windows Machine and we can run in Linux Machine.

- Automatic Memory Management : Java is basically having a terms as garbage collector which automatically handles the memory allocation.

===================================================

3 major pillars that we have in JAVA : 

1) JDK
2) JRE
3) JVM

1) JDK : Java Development KIT : 

A complete toolkit for developing the Java Application or programs.

JDK = JRE + JVM

Whenever we are supposed to write the code, we need to have JDK for sure.

2) JRE : Java Runtime Enviroment : 

It is a package that have all the neccesary libraries that we need to run the code.

3) JVM (Java Virtual Machine) : 

- It is a component of JRE which actually execute the code.

JRE is the complete enviroment for running Java Code while JVM is a specific component within JRE that actually executes the code.

===========================================================================

Eclipse IDE Setup

Java Setup

go to google.com
write Download Java 
Download and install it.



JAVA AND ECLIPSE

Go to Google.com

Download JAVA
Download ECLIPSE

1) Download JAVA
2) Install JAVA
3) Press Window Button and write cmd
4) Open CMD (Command Prompt)
5) write java -version

It will show you the version of JDK that you have installed.

-----------------------------------------------------------------

1- Press Window Button Again
2- Write Environment Variable
3- Click Environment Variable Button
4- Click PATH under system Variables
5- Click PATH and Click EDIT
6- Click New
7- Go to you JDK installed bin file program files (generally in C drive)
8- Copy this path till bin folder.
9- Paste this in Step 6
10-Click OK
11- Click OK

Why we are setting up this Environment variable of Java in System Variable : 

Answer : Sometimes, the system is unable to find Java in our machine so whenever we are adding this bin path to Environment Variable,
our system is able to find Java.

------------------------------------------------------------------

Any Questions ???????????????

NO

------------------------------------------------------------------

For mac machines,

1) Write Download Java for Mac in Google.com
2) Open the Oracle Link
3) Go to Mac tab
4) Click on .dmg file and download will start.
5) Once the download is done, install this file.
6) go to terminal
7) Run the command as java -version

------------------------------------------------------------------

How to download ECLIPSE in our machine : 

1) Write Download Eclipse in google.com
2) Open the first link of eclipse.org
3) Click on Download Button
4) It will redirect you to a new page, click on this new download button.
5) Now, ECLIPSE will be downloaded.
6) Open your downloads folder and double click on downloaded .exe file of ECLIPSE.
7) Your eclipse will be installed now.
8) Open Eclipse.
9) It will ask you a couple of options like "Eclipse IDE for Java Developers etc". ?
19) Click on "Eclipse IDE for Java Developers".
20) Your Eclipse will be installed in this way.

===================================================================

How to create new Java Project in Eclipse : 

1) Click file
2) Click New
3) Select "Project".
4) Select Java Project (Double click on "Java Project" option).
5) Write any Project Name 
6) Cilck on Finish
7) Your Java Project will be created

===================================================================

Double Click on Project and then right click on the src folder
Go to new and select the new package and create any new package with any name (Package name should start with small Letter).
Right click on this package.
Go to New
click on "Class"
Now give any class name and make sure to start it with Capital letter.
Select checkbox of public static void main
Cick OK

===================================================================

How to create main method in Java : 

Inside you class, write "main"
Press CTRL + Space
Select First Option or Press Enter

===================================================================

Whenever Java code runs, it looks for main method
To terminate a line in Java we have to use semicolon ;
To print anything in Console log in Java, we use System.out.println("any string you can pass here");
(The shortcut to write System.out.println is -> write syso and then press Ctrl + space)
To save a program, press CTRL + S

===================================================================

What are the data types in Java : 

2 types
1) Primitive Data type
2) Non Primitive Data Type

Primitive Data Types : 

- int
- double
- float
- char
- boolean
- byte
- short
- long

====================================================================
int -> It is used for whole numbers (integers).

Example : 
age of a person is 25.
int age = 25;

Range : -2147483648 to 2147483647


=====================================================================

double : it is used for decimal numbers (floating point numbers)

Example is : 
double price = 19.99 

double can be used to store large decimal values 

======================================================================

float : This is also used for decimal numbers but it less precise than double.

Example is : 
float temperature = 36.6f;

It requires f at the end of number.

=====================================================================

char : 
it is used for single character.

Example is : 
char grade = 'A'

We need to always give the value in single quotes.

=====================================================================

boolean : it is used to store 'true'/'false' values.

It only stores true/false.

Example : 
boolean isThisJavaBatchFunny = true;

=====================================================================

byte, short, long, String, Araays......

String : 

It is a sequence of characters.

Example : 
String myStr = "Subhadrshini, Prasanthi and Anmol comes in evening Java Automation Batch";

There is my Home and my Home name is "PerfectHeaven".

String homeName = "PerfectHeaven";

=====================================================================

short range : 

-32768 to 32767

short int = 32760

short int = 10000

short sum = num1 + num2;

=====================================================================

DATA TYPE : 
Primitive
Non-Primitive

Primitive : int, double, char, boolean, byte, long, short, float
Non-Primitive : String and Arrays

=====================================================================

String name1 = "Hmanshu";
String name2 = "Sathya";

String nameAfterConcatination;

nameAfterConcatination = name1 + name2;

System.out.println(nameAfterConcatination);

=====================================================================

How to write a variable name (common rule for all the data type): 


There are very simple rules to write a variable name : 

1) variable name cant be started with a number

Wrong Syntax : 
int 1num = 25;

Correct Syntax : 
int num1 = 25;

2) variable name cant have spaces : 

Wrong Syntax : 

String first name = "Himanshu";

Correct Syntax : 
String firstName = "Himanshu";

3) variable name cant contain a special character (except $ and underscore) : 

Wrong Syntax : 

long *num = 2500000000;
long num* = 2500000000;
long nu*m = 2500000000;

Correct Syntax : 

long _num = 2500000000;
long num_2 = 500000000;

4) variable name should be written in a camelCaseWay : 

camelCasing : first word should be small, and first letter of every other word should be in CAPS.

String myFirstName = "Himanshu";
String myBrotherName = "Ashish";
int myBatchHeadCountInEveningBatch = 22;
char firstLetterOfMyFatherName = 'A';

=================================================================

if (compare) {

body 

}

it is not neccesary to write the else statement.

=================================================================

if (compare) {

body 

}

else {

body 

}


=================================================================

switch case : 

package basicJavaPrograms;

public class SwitchCaseUsage {

	public static void main(String[] args) {

		useSwitchCase();
		
	}
	
	public static void useSwitchCase() {
			int day = 2;
			
			switch(day) {
			case 1:
				System.out.println("Its Monday");
			case 2:
				System.out.println("Its Tuesday");
			case 3:
				System.out.println("Its Wednesday");
			case 4:
				System.out.println("Its Thursday");
			case 5:
				System.out.println("Its Friday");
			default :
				System.out.println("Its not a weekday ========== Please have fun");
			}
	}

}


=========================================================


package basicJavaPrograms;

public class SwitchCaseUsage {

	public static void main(String[] args) {
		useSwitchWithLoop();
	}

	public static void useSwitchCase() {
		int day = 2;

		switch(day) {
		case 1:
			System.out.println("Its Monday");
			break;
		case 2:
			System.out.println("Its Tuesday");
			break;
		case 3:
			System.out.println("Its Wednesday");
			break;
		case 4:
			System.out.println("Its Thursday");
			break;
		case 5:
			System.out.println("Its Friday");
			break;
		default :
			System.out.println("Its not a weekday ========== Please have fun");
		}
	}

	public static void useSwitchForString() {

		String name = "Happy";

		switch(name) {

		case "Himanshu":
			System.out.println("This is a mentor");
			break;

		case "Prasanthi":
			System.out.println("This is a learner");
			break;

		case "Anmol":
			System.out.println("This is a learner");
			break;

		default :
			System.out.println("not sure");
			break;

		}
	}

	public static void useSwitchWithLoop() {

		String name = "Happy";

		for(int i=1;i<=2;i++) {   // i=1  // i=2
			switch(name) {

			case "Himanshu":
				System.out.println("This is a mentor");
				break;

			case "Prasanthi":
				System.out.println("This is a learner");
				break;

			case "Anmol":
				System.out.println("This is a learner");
				break;

			default :
				System.out.println("not sure");
				break;
			}
			name = "Anmol";
		}
	}

// It is not mandatory to write the default code in switch case

}


=====================================================================================

Keywords in Java : 

package basicJavaPrograms;

public class Keywords {

	public static void main(String[] args) {

	}
	
	// What are the keywords in Java :
	
	/* Keywords are some reserved words that have a predefined meaning and can not be used an identifier
	 * 
	 * We can not give some variable name as as keyword name
	 * We can not give some method name as as keyword name
	 * We can not give some class name as as keyword name
	 * 
	 */
	
	

}


keywords that we use in Java : 

// class 
	// public
	// private
	// protected
	// static 
	// void
	// int
	// String
	// float
	// double
	// short
	// long
	// byte
	// char
	// boolean
	// if
	// else
	// for
	// while
	// do while
	// continue
	// break
	// return
	// final
	// finally
	// finalize
	// switch
	// super
	// this
	// case
	// try
	// catch
	// finally
	// throw
	// throws
	// abstract
	// package
	// new
	// extends
	// implements
	// default
	// interface
	
	
	
=====================================================================================

Array In Java 

An array in Java is used to hold many values of same data type.

- Array is always fixed in size (we need to define the size of an array when declaring it.
- Array can store the values of same data type
- Array values are accessed with index starts from 0 (zero).
- Array is defined by using square brackets []

int[] i = {2,3,4,12,15};   // This is the first way to define the array
int[] j = new int[8];      // This is the another way to define the array

int i[] = {2,14,78,90};  // this is also correct (very rare people use this)
int []i = {15,60,89,70}; // this is also correct (very rare people use this)

=====================================================================================

ArrayIndexOutOfBoundsException :


We have an array size = 4

can we access its 5th element ??

=====================================================================================


package basicJavaPrograms;

public class ArraysInJava {

	public static void main(String[] args) {
		methodForStringArray();
	}
	
	public static void methodForUnderstandingArrays() {
		
//		int[] myArr = {45,86,900};
		
		int[] myArr = new int[5];  // Total it can store only 5 values
		
		myArr[0] = 500;    // position1
		myArr[1] = 87;     // position2
		myArr[2] = 90;     // position3
		myArr[3] = 92;     // position4
		myArr[4] = 2000;   // position5

		System.out.println("value at position 3 is :: " + myArr[2]);
		
	}

	public static void methodForStringArray() {
		
		String[] myArr = {"Himanshu", "Sathya","Mohammad","Jegan G", "Anish","Rahul"};
		
//		System.out.println("name at position 2 is :: " + myArr[1]);
//		System.out.println("name at position 4 is :: " + myArr[3]);
		
//		System.out.println("Total names in the array are :: " + myArr.length);
		
		for(int i=0;i<myArr.length;i++) {
			System.out.println(myArr[i]);
		}
		
	}
	
}



=====================================================================================


String class

String is immutable - once created cant be destroyed.

String pool : if we have multiple variables with the same value, all the variables are pointing out to the same value.

We have so many methods of String class that we can directly use.


package basicJavaPrograms;

public class StringInJava {

	public static void main(String[] args) {
		charAtMethod();
	}
	
	public static void stringProgram() {
		// String Class
		// This program is very very very important
		String s1 = "Himanshu";
		String s2 = "Himanshu";
		String s3 = new String("Himanshu");
		
		if(s1==s2) {        // In case of String this == refers to the memory reference 
			System.out.println("s1 and s2 are equal");  // This will be printed
		}
		if(s1.equals(s2)) {   // This compares the value of String
			System.out.println("s1 and s2 are again equal"); // This will be printed
		}
		if(s1==s3) {
			System.out.println("s1 and s3 are equal");  // This will not be printed
		}
		if(s1.equals(s3)) {
			System.out.println("s1 and s3 are again equal"); // This will be printed
		}
	}
	
	// This is an open forum - discuss altogether
	
	public static void lowerCaseMethodOfString() {
		String name = "HiManshu";
		System.out.println("Name is :: " + name.toLowerCase());  // This is an inbuilt method
	}
	
	public static void upperCaseMethodOfString() {
		String name = "HiManshu";
		System.out.println("Name is :: " + name.toUpperCase());  // This is an inbuilt method
	}
	
	public static void compareTwoStrings() {
		String name1 = "Himanshu";
		String name2 = "HIMANSHU";
		if(name1.equals(name2)) {
			System.out.println("both the names are equal");
		}
		else {
			System.out.println("names are not equal");
		}
	}

	public static void comapareTwoStringWithIgnoreCase() {
		String name1 = "Himanshu";
		String name2 = "HIMANSHu";
		if(name1.equalsIgnoreCase(name2)) {
			System.out.println("both names are equal");
		}
		else {
			System.out.println("both names are not equal");
		}
	}

	public static void charAtMethod() {
		String name = "Himanshu";
		System.out.println("Char at position 2 in name is :: " + name.charAt(1));
	}
	
}


======================================================================================

Access Modifiers
OOPS Concepts

======================================================================================

Use of Static and Instance variables :

There are 3 types of variables we have in Java : 

1) Static Variable
2) Instance Variable 
3) Local Variable


Local Variable : 

package basicJavaPrograms;

public class LocalVariables {

	public static void main(String[] args) {
		String name1 = "Jegan G";                      // name = Jegan G
		String name2 = "Prasanthi";
		methodForlocalVariableUsage();
		System.out.println("name1 is :: " + name1);
		System.out.println("name2 is :: " + name2);
	}
	
	// Local variables should always be initialized
	// Local variables is having the limited scope 

	public static void methodForlocalVariableUsage() {
		int i=10;
//		System.out.println("value of i is :: " + i);
		i = 1000;
//		System.out.println("value of i is :: " + i);
		String name1 = "Himanshu";                         // name = Himanshu
		String name2 = "Mukilan";
		System.out.println("name1 is :: " + name1);
		System.out.println("name2 is :: " + name2);
	}
}


=====================================================================================


Static Variable : 

// static variable is having its existence at the class level
// we can't use the static keyword for a variable in a method because static works on class level
// Any other class can access the static variable/method of another class by using its className
// Example : className.staticMemberName (member means variables and methods)

package basicJavaPrograms;

public class ClassForStaticVariableInJava {

	static String organisationName = "Guvi";
	
	public static void main(String[] args) {

		System.out.println("organisation name is :: " + organisationName);
		
	}
	
	public static void sum() {
		int a = 10; 
		int b = 20;
		int c = a + b;
		System.out.println("sum is :: " + c);
	}
}

package basicJavaPrograms;

public class Class2ToAccessStaticVariable {

	public static void main(String[] args) {

		String orgName = ClassForStaticVariableInJava.organisationName;
		System.out.println("organisation name is :: " + orgName);
		
		ClassForStaticVariableInJava.sum();
	}

}

============================================================================

Instance Variable In Java : 

Now, what do mean by instance..

instance means object.

It means, instance variable works at the object level.

How to create an object.

whenever we put "new" keyword before the classNameWithParanthesis(), its object is created.


package basicJavaPrograms;

public class Class1 {

	public static void main(String[] args) {

	}

	public static void sum() {
		System.out.println("I am sum method");
	}
	
	public static void subtract() {
		System.out.println("I am subtract method");
	}
	
	public void multiply() {
		System.out.println("I am multiply method");
	}
	
	public void divide() {
		System.out.println("I am divide method");
	}
	
}




package basicJavaPrograms;

public class Class2 {

	public static void main(String[] args) {

		Class1 myObject  = new Class1();
		
		myObject.multiply();
		myObject.divide();

		Class1.sum();
		Class1.subtract();
		
	}

}

package basicJavaPrograms;

public class Class2 {

	public static void main(String[] args) {

		Class1 myObject  = new Class1();
		
		myObject.multiply();
		myObject.divide();

		Class1.sum();
		Class1.subtract();
		
		Class1 myObject2  = new Class1();
		
		myObject2.multiply();
		myObject2.divide();
		
	}

}



=============================================================================

Constructor In Java : 

1) Constructor in java means a method that is having exactly the same name as className.           
2) Contructor never has return statement.
3) Contructor will be called automatically when the object of its class is created.
4) Yes we can overload the constructor
5) There are 2 types of constructor : Default Construtor, Paramterized Constructor


package basicJavaPrograms;

public class ClassForConstuctor {

	public ClassForConstuctor() {
		System.out.println("I am a default constructor");
	}

	public void m1() {
		System.out.println("i am m1");
	}

	public void m2() {
		System.out.println("i am m2");
	}


}


package basicJavaPrograms;

public class Class3 {

	public static void main(String[] args) {

		Class1.sum(); // static method calling
		Class1.subtract();  // static method calling
		new ClassForConstuctor();  // Object will be created & contructor is called
		ClassForConstuctor myObject = new ClassForConstuctor(); // Object will be created & contructor is called
		myObject.m1();
		myObject.m2();
	}

}


// Static methods are called with the className in another class
// Non static methods are called with the object in another class
// Contructor is by default called when object of its class is created


package basicJavaPrograms;

public class ClassForConstuctor {

	public static void main(String[] args) {
		m2();
	}
	
	public ClassForConstuctor() {
		System.out.println("I am a default constructor");
	}

	public void m1() {
		System.out.println("i am m1");
	}

	public static void m2() {
		System.out.println("i am m2");
		new ClassForConstuctor();
	}



}


What is a parametarized constructor : 

What is a parameter : 

package basicJavaPrograms;

public class ClassToUnderstandParameter {

	public static void main(String[] args) {
		subtract(25, 25);
		m3(58, "Himanshu");
	}
	
	public static void sum(int a, int b) {
		int c = a+b;
		System.out.println("addition is ::" + c);
	}
	
	public static void subtract(int c, int d) {
		int e = c - d;
		System.out.println("subtraction is ::" + e);
	}

	public static void m3(int a, String b) {
		System.out.println("value is :: " + a);
		System.out.println("name is :: " + b);
	}
	
}

Parameterized Contsructor : 

package basicJavaPrograms;

package basicJavaPrograms;

public class Class5 {

	public Class5() {
		System.out.println("I am in the default constructor");
	}
	
	public Class5(int number) {
		System.out.println("I am in parameterized constrctor and number is :: " + number);
	}
	
	public Class5(int a, int b, int c) {
		System.out.println("I am in parameterized constrctor and the summation is :: " + (a+b+c));
	}
	
	public Class5(String firstName, String lastName) {
		System.out.println("FullName is " + (firstName + lastName));
	}
	
	public Class5(String orgName) {
		System.out.println("Organisartion name is :: " + orgName);
	}
	
}


package basicJavaPrograms;

package basicJavaPrograms;

public class Class6 {

	public static void main(String[] args) {

		new Class5();
		new Class5(15);
		new Class5(15, 5, 5);
		new Class5("Himanshu", "Guvi");
		new Class5("Guvi");
	}

}



===============================================================================


Access Modifiers : 

What are the access modifiers : 

1) Default
2) public
3) private
4) protected


==================================================================


- OOPS Concepts (Encapsulation - Getters and Setters, Abstraction , Polymorphism - Overloading and Overridding, Inheritance)
- Difference between Abstract Class and Interface
- Interface Implementation

==================================================================

OOPS : 

1) Encapsulation
2) Polymorphism
3) Abstraction
4) Inheritance

-------------------------------------------------------------------

Polymorphism : 

Poly - many
phism - forms

Polymorphism - many forms

it means we are having many forms of a method 

Overloading
Overridding

Overloading : 

We have same method name in the same class, but we have 3 conditions in overloading.

1) methods having same name but no. of paramters are different
2) methods having same name but type of paramters are different
3) methods having same name, no. of parameters are same, type of parameters are same but order of paramters are different

In case of constructor, we call it as constructor overloding.
In case of method, we call it as method overloading.


package basicJavaPrograms;

public class ClassForOverlodingConcept {

	public static void main(String[] args) {
		sum(50, 50);
		sum(2, 2, 3);
		sum(20, "Prasanthi");
		sum("Prasanthi",30);
	}
	
	public static void sum(int a, int b) {
		int c = a + b;
		System.out.println("sum of 2 numbers is :: " + c);
	}
	
	public static void sum(int a, int b, int c) {
		int d = a + b + c;
		System.out.println("sum of 3 numbers is :: " + d);
	}
	
	public static void sum(int a, String b) {
		System.out.println("number is :: " + a);
		System.out.println("name is :: " + b);
	}

	public static void sum(String a, int b) {
		System.out.println("firstName is " + a);
		System.out.println("numberNow is :: " + b);
	}
	
}


============================================================================

Assignment is : 

Q1 : Make a class with 5 constructors and call all these 5 constructors in same class by its object
Q2 : Make a class with 5 constructors and call all these 5 constructors in another class by its object
Q3 : Make a class with 5 overloaded methods and call all these 5 methods in the same class.
Q4 : Make a class with 5 overloaded methods and call all these 5 methods in the another class.

Status of Assignment : 

Subhadarshini - Yes
Prasanthi - 3 Done

Jegan G - Yes
Sathya - Yes
Deepa - 1 Done, 3 left
Anish - 1 done, 3 left
Rathi Devi - Yes
Abhiramasundari - 1 done, 3 left
Shaffna - Yes 
Manish - Yes
Prabhu - NO
Mukilan - NO
Madhunika - NO
Anmol - NO
Mohammad - NO
Anbarasan - NO
durairam - NO

============================================================================

- OOPS Concepts (Encapsulation - Getters and Setters, Abstraction , Polymorphism - Overloading and Overridding, Inheritance)
- Difference between Abstract Class and Interface
- Interface Implementation

============================================================================

OOPS Concepts  :

1) Polymorphism
2) Abstraction
3) Encapsulation
4) Inheritance

Polymorphism : Overloading and Overridding

Overloading is already covered above.

Overridding : 

Overridding is an another type of Polymorphism.

Another names of overridding are : "Run Time Polymorphism", and "Dynamic Method Dispatch".


-----------------------------------------------------------------------------

Overloading is a concept that is application in single class.
Overridding is a concept that is applicable in Parent and Child Class.

To learn overridding we first need to learn what is "Inheritance".


What is Inheritance : 

- Inheritance is one of the OOPS concept wherein one class can inhibit the data members of another class by using Parent Child relation.
- 'extends' keyword is used to inherit another class.
- 'implements' keyword is used to inherit another interface.


Child Class can access parent class methods freely without creating the Object.


===============================================================================

Static and nonStatic method calling in same class : 

package basicJavaPrograms;

public class StaticNonStaticCallingInSameClass {

	public static void main(String[] args) {
		m1Static();
		m2Static();
	}

	public static void m1Static() {
		System.out.println("I am m1Static ");
		m2Static();
	}

	public static void m2Static() {
		System.out.println("I am m2Static ");
	}

	public void m1NonStatic() {
		System.out.println("I am m1NonStatic ");
		m1Static();
		m2NonStatic();
	}

	public void m2NonStatic() {
		System.out.println("I am m2NonStatic ");
	}

}


===============================================================================

use of return keyword : 

how to create a method : 

<accessModifier - public> <mention whether its a static or nonStatic> <return type void/int/String> <methodName> () {

Body of method

}

package basicJavaPrograms;

public class UseOfReturnKeyword {

	public static void main(String[] args) {
		
		int num3 = 20;
		int sumOf3Numbers;
		
		sumOf3Numbers = sumOfTwoNumebrs(20,10) + num3;
		System.out.println("summation of 3 numbers is :: " + sumOf3Numbers);
	}
	
	public static int sumOfTwoNumebrs(int num1, int num2) {
		int c = num1 + num2;
		return c;
	}

}

=====================================================================================

package basicJavaPrograms;

public class UseOfReturnKeyword {

	public static void main(String[] args) {
		
		int num3 = 20;
		int sumOf3Numbers;
		
		sumOf3Numbers = sumOfTwoNumebrs(20,10) + num3 + 100;
		System.out.println("summation of 3 numbers is :: " + sumOf3Numbers);
	}
	
	public static int sumOfTwoNumebrs(int num1, int num2) {
		int c = num1 + num2;
		int d = 5;
		int e = 5;
		int f = c + d + e;
		return f;
	}

}

=====================================================================================

Overridding : 

ClassA - Child
ClassB - Parent 
ClassC - Overridding


package basicJavaPrograms;

public class ClassAChild extends ClassBParent {

	public void showGuviDetails() {
		System.out.println("I am a child class method");
	}

}



package basicJavaPrograms;

public class ClassBParent {

	public void showGuviDetails() {
		System.out.println("I am a parent class method");
	}

}


package basicJavaPrograms;

public class ClassCForOverridding {

	public static void main(String[] args) {

		ClassBParent obj1 = new ClassBParent();
//		obj1.showGuviDetails();
		
		System.out.println("=================================");
		
		ClassAChild obj2 = new ClassAChild();
//		obj2.showGuviDetails();
		
		System.out.println("=================================");
		
//		ClassAChild obj3 = new ClassBParent();    // This is wrong statement
		
		ClassBParent obj4 = new ClassAChild();
		obj4.showGuviDetails();
		obj4 = new ClassBParent();
		obj4.showGuviDetails();
	}

}



===================================================================

Encapsulation : 

- Encapsulation is one of the OOPS concepts of Java.
- Encapsulation means we are encapsulating data memebers in a class.
- We are hiding the implemenation details from other users.
- We use getters and setters in encapsulation.

use of this keyword in java : 

this keyword is used to have a reference of same class.

this.num means we are referring the num variable of same class where in this line is written.

----------------------------------------------------------------

package basicJavaPrograms;

public class ClassForEncapsulation {

	private int num;
	
	public void setNum(int num) {
		this.num = num;
	}
	
	public int getNum() {
		return this.num;
	}
	
}

package basicJavaPrograms;

public class CallingEncapsulationDataMembers {

	public static void main(String[] args) {

		ClassForEncapsulation myObj = new ClassForEncapsulation();
		
		myObj.setNum(10);
		myObj.getNum();
		
	}

}


================================================================================

Inheritance : 

- This is one of the OOPS concept of Java.
- Multi Level Inheritance is allowed in Java.
- Multiple Inheritance is not allowed in Java (for classes)
- Mulitiple Inheritance is allowed in Java only in case of Interface.
- extends keyword is used to inherit a class.
- implements keyword is used to inherit a interface

Class A extends Class B - Correct
Class B extends Class C - Correct
Class A extends Class B,C - Incorrect
Class A imlpements interface B,C - Correct


package basicJavaPrograms;

public class ClassA extends ClassB{


	public static void main(String[] args) {
		ClassA a = new ClassA();
		a.callMethod();
	}
	
	public void callMethod() {
		sum();
		subtract();
	}
	
}



package basicJavaPrograms;

public class ClassB extends ClassC{

	public static void main(String[] args) {
		
	}
	
	public void sum() {
		System.out.println("I am sum method of classB");
	}
	
}



package basicJavaPrograms;

public class ClassC {
	
	public void sum() {
		System.out.println("sum method of ClassC");
	}
	
	public void subtract() {
		System.out.println("subtract method of ClassC");
	}

}

=================================================================================

Use of Super Keyword In Java :  
Super Keyword is used to call Parent Class methods/variables/constructor.

package basicJavaPrograms;

public class ClassParent1 {

	public void sum() {
		System.out.println("I am sum method of Parent Class");
	}
	
}


package basicJavaPrograms;

public class ClassChild1 extends ClassParent1{

	public static void main(String[] args) {

		ClassChild1 myObj = new ClassChild1();
		myObj.callSumMethod();
		
	}
	
	public void sum() {
		System.out.println("I am sum method of Child Class");
	}
	
	public void callSumMethod() {
		super.sum();
	}

}

Important Thing about super keyword is : 

- Whenever the child class is called, its parent class constructor will always be called.
- It means super() (of parent class) is always hidden.
- It means if we have constructor in child class and parent class both, in that case also whenever we are creating the object of child class,
  first of all Parent Class Constuctor will be called and then child class constructor will be called.
- The first line (hidden line) of every constructor is "super();"

package basicJavaPrograms;

public class ClassParent1 {

	public void sum() {
		System.out.println("I am sum method of Parent Class");
	}
	
	public ClassParent1() {
		System.out.println("I am default constructor of Parent Class");
	}
	
}


package basicJavaPrograms;

public class ClassChild1 extends ClassParent1{

	public static void main(String[] args) {

		ClassChild1 myObj = new ClassChild1();
		myObj.callSumMethod();

	}

	public ClassChild1() {
		System.out.println("I am the default constructor of Child Class");
	}

	public void sum() {
		System.out.println("I am sum method of Child Class");
	}

	public void callSumMethod() {
		super.sum();
	}

}


==================================================================================

package basicJavaPrograms;

public class ClassChild2 extends ClassParent2{

	public ClassChild2() {
		System.out.println("I am the default constructor of Child class");
	}
	
	public static void main(String[] args) {
		ClassChild2 myObj = new ClassChild2();
	}
	
}


package basicJavaPrograms;

public class ClassParent2 extends ClassGrandParent2{

	public ClassParent2() {
		System.out.println("I am default constructor of Parent Class");
	}
	
}


package basicJavaPrograms;

public class ClassGrandParent2 {

	public ClassGrandParent2() {
		System.out.println("I am default constructor of Grand Parent Class");
	}
	
}


=============================================================

Abstraction : 

What is abstraction : 

- This is one of the OOPS concept of Java wherein we are hidding the implemenation details from the actual user.
- User only calls the method and not aware of the logic written inside.
- Abstraction is achieved in Java using abstract keyword.
- Abstract Classes are the example of Abstracttion.
- One Abstract Class can have one of more than one abtract method.
- Concrete methods are the methods which have body (where in abstract methods are the one which does not have any body).
- Abstract Classes cant be instantiated (We cant create the object of Abstract Class).
- Abstract Classes are inherited by another classes using extends keyword.
- When any other class extends the abstract class, it always have to have all the abstract methods inside it.
- When any other class extends the abstract class, it always need to give the body of all the abstract methods inside.

package basicJavaPrograms;

public abstract class AnimalClass {
	
	// abstract method
	public abstract void sound();
	
	// Concrete Method (having body)
	public void sleep() {
		System.out.println("this animal sleeps");
	}

}


package basicJavaPrograms;

public class DogClass extends AnimalClass{

	public static void main(String[] args) {
		
		DogClass myObj = new DogClass();
		myObj.sleep();
		myObj.sound();
	}

	@Override
	public void sound() {
		System.out.println("Dog barks");
	}

}


package basicJavaPrograms;

public class LionClass extends AnimalClass{

	public static void main(String[] args) {

		LionClass myObj = new LionClass();
		myObj.sleep();
		myObj.sound();
	}

	@Override
	public void sound() {
		System.out.println("Lion Roars");
	}

}


===========================================================================

package basicJavaPrograms;

public abstract class FourWhellerClass {
	
	public abstract void carName();
	public abstract void carColor();
	public abstract void tyreType();
	public abstract void fuelType();
	public abstract void isSunroofAvailable();
	
	public void numberOfWheels() {
		System.out.println("This is a car with stupny, so total 5 wheels are there");
	}

}


package basicJavaPrograms;

public class MarutiAltoClass extends FourWhellerClass{

	@Override
	public void carName() {
		System.out.println("Car Name is Maruti Alto");
		
	}
	
	@Override
	public void carColor() {
		System.out.println("Car color is red");
	}

	@Override
	public void tyreType() {
		System.out.println("Normal wheels are there");
	}

	@Override
	public void fuelType() {
		System.out.println("Car is available in CNG and Petrol");
	}

	@Override
	public void isSunroofAvailable() {
		System.out.println("Sunroof is not avaiable");		
	}

	public void altoCarSpeciality() {
		System.out.println("I am the cheapest car in the world");
	}
	
	public static void main(String[] args) {
		MarutiAltoClass myObj = new MarutiAltoClass();
		myObj.carName();
		myObj.carColor();
		myObj.tyreType();
		myObj.fuelType();
		myObj.isSunroofAvailable();
		myObj.altoCarSpeciality();
		myObj.callNumberOfWheels();
	}
	
	public void callNumberOfWheels() {
		numberOfWheels();
	}

}




package basicJavaPrograms;

public class HyundaiCretaClass extends FourWhellerClass{

	@Override
	public void carName() {
		System.out.println("Car Name is Hyundai Creta");
	}
	
	@Override
	public void carColor() {
		System.out.println("Car color is white");
	}

	@Override
	public void tyreType() {
		System.out.println("tyre type is Alloy wheels");
	}

	@Override
	public void fuelType() {
		System.out.println("Car is avaialbe in Petrol only");
	}

	@Override
	public void isSunroofAvailable() {
		System.out.println("Yes Sunroof is avaiable");
	}

	public void hyundaiCarSpeciality() {
		System.out.println("my Car AC is best in the world");
	}
	
	public static void main(String[] args) {
		HyundaiCretaClass myObj = new HyundaiCretaClass();
		myObj.carName();
		myObj.carColor();
		myObj.tyreType();
		myObj.fuelType();
		myObj.isSunroofAvailable();
		myObj.hyundaiCarSpeciality();
		myObj.callNumberOfWheels();
	}
	
	public void callNumberOfWheels() {
		numberOfWheels();
	}
	
}



=================================================================================

Assignment : 

1) Create an abstract class named as "ElectronicDevice" having 
abstract methods as "deviceColor", "turnOn", "turnOff".
2) Create 1st class named as "Heater" that extends abstract 
class "ElectronicDevice" and implement all its unimplemented methods.
3) Create 2nd class named as "Geyser" that extends abstract 
class "ElectronicDevice" and implement all its unimplemented methods.
4) Create 3rd class named as "InductionCooker" that extends 
abstract class "ElectronicDevice" and implement all its unimplemented 
methods.

You have 25 min, we will connect at 08:00

=================================================================================

Interface :

- Interface is the one wherein all the methods are abstract method.
- There is no need to use abstract keyword (by default all methods are abstract in an interface).
- By using Interface, we can achieve multiple inheritance.
- If we want to create a concrete method in interface then it is mandatory to keep it static.
- Interface cant be instantiated (we cant create the object of an interface).
- implements keyword is used to inherit an interface.

In Java Classes, multilevel inheritance is allowed but multiple inheritance is not allowed.
If we want to use multiple inheritance in java, this can only be achieved using Interface.

Interface is giving a basic architecture (basic methods) one class must have when it is implementing that interface.
One interface can extend another interface by using the word "extends" ( we cant use implements keyword here).

Note : 
Multiple inheritance is not allowed in case of Abstract Classes. (one abstract class cant extend more than one abstract class).
Multiple inheritance is not allowed in case of normal classes. (one class cant not extend more than one class)
Mulitiple inheritance is only allowed in case of interfaces. (one class can implement any number of interfaces).
Important Point : One class can extend one class and can also implement interface.

================================================================================

package basicJavaPrograms;

public interface MobileInterface {

	void mobileColor();
	void mobileScreenSize();
	void mobileRamSize();
	void mobileBattery();
	
}

package basicJavaPrograms;

public interface AppleDeviceInterface {

	void iOSVersion();
	void chargerType();
	
}

package basicJavaPrograms;

public class ApplePhoneClass implements MobileInterface, AppleDeviceInterface{

	@Override
	public void iOSVersion() {
		System.out.println("iOS version is iOS-18");
	}

	@Override
	public void chargerType() {
		System.out.println("charger is C type charger");
	}

	@Override
	public void mobileColor() {
		System.out.println("we have 4 colors of apple phone");
	}

	@Override
	public void mobileScreenSize() {
		System.out.println("Screen size is 7 inches");
	}

	@Override
	public void mobileRamSize() {
		System.out.println("Ram size is 8Gb");
	}

	@Override
	public void mobileBattery() {
		System.out.println("mobile battery is 20000 mAH");
	}

}

package basicJavaPrograms;

public interface AndroidDeviceInterface {

	void androidVersion();
	void isCallRecordingFeatureAvailable();
	
}


package basicJavaPrograms;

public class AndroidPhoneClass implements MobileInterface, AndroidDeviceInterface{

	@Override
	public void androidVersion() {
		System.out.println("Android version is sandwitch");
	}

	@Override
	public void isCallRecordingFeatureAvailable() {
		System.out.println("Yes call recording feature is available");
	}

	@Override
	public void mobileColor() {
		System.out.println("Available in 7 colors of rainbow");
	}

	@Override
	public void mobileScreenSize() {
		System.out.println("Mobile screen size is 8 inches");
	}

	@Override
	public void mobileRamSize() {
		System.out.println("ram size is 16GB");
	}

	@Override
	public void mobileBattery() {
		System.out.println("Mobile battery is 30000mAH");
	}

}


==================================================================================

Assignment is : 

Create one interface I1 having methods as sum(), subtract().

Create one more interface I2 with 2 new methods and that extends the above interface.

Create a class that implements only I2 (not I1) and check how many methods we need to implement in this class.


Send me the code in chat window once done.

You have 5-10 minutes to work on it, we will connect at 06:20 to discuss.

==================================================================================

Abhiramasundari - 
Anbarasan - Yes
Anish - Yes
Anmol - 
Rathi - Yes
Deepa - NO
Durairam - No Show
Jegan - Yes
Madhunika - 
Manish - Yes
Prabhu - NO
Prasanthi - Partially Done
Rajeswari - No Show
Sathya - Yes
Shaffna - Yes
Somasekar - 
Subhadarshini - Yes


===================================================================================

Collection and Collections :

=> Collection is an interface.

=> Collections is a class that implements collection interface (collection framework).

=> As we all know that we can never create the object of an interface so we cant create the object of collection.
We can create the object of collections class (It means we can only instantiate the collections classes but not the collection interface).

Collection interfaces : Map, List, Set 

Collection Classes : ArrayList, LinkedList, HashSet, TreeSet, LinkedHashSet, HashMap

Collections classes has so many predefined methods for searching, sorting etc. 

List, Set, Map (ArrayList, HashSet, HashMap).

======================================================================================

List : 

- List is an interface. 
- It comes under collection framework.
- It stores the data in the form of index.
- We can get the value from the list using index.
- We can add the values in a list in the insertion order.
- List is not fixed in size (like Array).
- It allows duplicate values.
- It allows null values.

Lets say : I have so many fruits and I need to add the fruits name in a list.

List<String> myFruitsList = new ArrayList<>();

myFruitsList.add("Apple"); // It will add Apple to the list.
myFruitsList.add("Mango"); // It will add Mango to the list.

How to get the value from List : 

using get method of list and pass the index in this get method (index is always 1 less than the position).
myFruitsList.get(1); // it will return the value that is there at position 2.

=======================================================================================

package basicJavaPrograms;

import java.util.ArrayList;
import java.util.List;

public class ListExamples {

	public static void main(String[] args) {
		methodFordynamicValuesInAList("Himanshu","Subhadarshini","Manish");
		methodFordynamicValuesInAList("Anmol","Prasanthi","Anish");
	}
	
	public static void myMethodOfList() {
		List<String> myFruitsList = new ArrayList<>();
		myFruitsList.add("Apple");
		myFruitsList.add("Mango");
		myFruitsList.add("Orange");
		System.out.println("fruit name at position 1 is :: " + myFruitsList.get(0));
		System.out.println("fruit name at position 2 is :: " + myFruitsList.get(1));
		System.out.println("fruit name at position 3 is :: " + myFruitsList.get(2));
	}

	public static void methodFordynamicValuesInAList(String value1, String value2, String value3) {
		List<String> myList = new ArrayList<>();
		myList.add(value1);
		myList.add(value2);
		myList.add(value3);
		System.out.println(myList);
	}
	
}


=================================================================================

Assignment:

Create a new List named as myList1 having 10 integer values.
Take 3rd and 7th value from this List and return the sum of these 2 numbers.
Create a new list and add this addition in this new list named as myList2.

Any doubt in this assignment ?

Lets connect at 08:15 (you guys have 10 minutes to work on this).  OKAY ?????????

=================================================================================

package basicJavaPrograms;

import java.util.ArrayList;
import java.util.List;

public class ListAssignment {

	public static void main(String[] args) {
		methodForAssignment();
	}
	
	public static void methodForAssignment() {
		
		List<Integer> myList1 = new ArrayList<>();
		myList1.add(10);
		myList1.add(25);
		myList1.add(38);
		myList1.add(42);
		myList1.add(70);
		myList1.add(90);
		myList1.add(100);
		myList1.add(120);
		myList1.add(11);
		myList1.add(14);
		
		int sum = myList1.get(2) + myList1.get(6);   
		System.out.println("Sum is :: " + sum);
		
		List<Integer> myList2 = new ArrayList<>();
		myList2.add(sum);
//		System.out.println(myList2);
		System.out.println("value in list 2 is :: " + myList2.get(0));
	}
	
}



=========================================================================

package basicJavaPrograms;

import java.util.ArrayList;
import java.util.List;

public class ListAssignmentAlternateWay {

	public static void main(String[] args) {
		methodForListAssignment();
	}
	
	public static void methodForListAssignment() {
		int[] myArray = {10,25,38,42,70,90,100,120,11,14};
		List<Integer> myList = new ArrayList<>();
		
		for(int index=0;index<myArray.length;index++) {
			myList.add(myArray[index]);
			System.out.println("value in the list at index " + index + " is " + myList.get(index));
		}
		int myListSize = myList.size();
		System.out.println("my list size is :: " + myListSize);
		
		int sum = myList.get(2) + myList.get(6);
		System.out.println("Sum is :: " + sum);
		
		List<Integer> myList2 = new ArrayList<>();
		myList2.add(sum);
		System.out.println("value in list2 is :: " + myList2.get(0));
		 
	}

}


====================================================================================

package basicJavaPrograms;

import java.util.ArrayList;
import java.util.List;

public class ListAssignmentAlternateWay {

	public static void main(String[] args) {
		methodForListAssignment();
	}
	
	public static void methodForListAssignment() {
		int[] myArray = {10,25,38,42,70,90,100,120,11,14};
		List<Integer> myList = new ArrayList<>();
		
		for(int index=0;index<myArray.length;index++) {
			myList.add(myArray[index]);
			System.out.println("value in the list at index " + index + " is " + myList.get(index));
		}
		int myListSize = myList.size();
		System.out.println("my list size is :: " + myListSize);
		
		int sum = myList.get(2) + myList.get(6);
		System.out.println("Sum is :: " + sum);
		
		List<Integer> myList2 = new ArrayList<>();
		myList2.add(sum);
		System.out.println("value in list2 is :: " + myList2.get(0));
		 
		System.out.println("myList2 size is :: " + myList2.size()); // 1
		myList2.remove(0);
		System.out.println("myList2 size is :: " + myList2.size()); // 0
	}

}


================================================================



Assignment : 

1) Create an array having 10 String values.
2) create a new list -> Create a for loop. 
3) Pass all these 10 values from the array to this new list (using the above for loop).
4) Add 2 more (new) values in this list.
5) Get the size of list.
6) Get the value that we have at index 5.
7) Remove one value from the list at index 5.
8) Now again, Get the value that we have at index 5.
9) Create a new list.
10) Copy all values from list1 to list2 (created in step 9).

===================================================================================================

Jegan G - Yes
Subhadarshini - Yes
Rathi Devi - Yes
Somesekar - Yes
Abhiramasundari - Yes
Anbarasan - Yes
Anish - Yes
Durairam - Yes
Manish - Yes
Prabhu - Yes
Shaffna - Yes
Amritha - In Progress
Mohammed - No Show
Prasanthi - Not Completed the recording yet as per her
Sathya - 
Rajeshwari - 
Anmol - Yes
Deepa - In Progress

=========================================================================================

LinkedList is Java : 

- It is a class in Java that is used to store elements.
- It takes more memory than ArrayList.
- Insertion and Deletion of elements in the LinkedList is fast.
- LinkedList works on node basis.

first node -> next node -> next node.

- Singly Linked List.
- Doubly Linked List.

Singly Linked List : 

Node1 -> Node2 -> Node3 -> Node4

Doubly Linked List : 

Node1->Node2->Node3-> Node4
Node1<-Node2<-Node3<-Node4


Linked List : 

Head -> Node1 -> Node2 -> Node3 -> Node4

============================================================================================

LinkedList Implementation : 

package createqadoc.CreateQADoc;

import java.util.LinkedList;

public class LinkedListImplementation {

	public static void main(String[] args) {
		methodForLinkedListUnderstanding();
	}
	
	public static void methodForLinkedListUnderstanding() {
		
		LinkedList<String> myList = new LinkedList<String>();
		
		 myList.add("Himanshu");
		 myList.add("Anmol");
		 myList.add("Manish");
		 myList.add("Prasanthi");
		 myList.add("Anish");
		 System.out.println("Value at 1st index is :: " + myList.get(1));
		 System.out.println("my list is :: " + myList);
		 
		 myList.addFirst("Deepa");     // This method does not exist in ArrayList
		 System.out.println("Value at 1st index is :: " + myList.get(1));
		 System.out.println("my list after adding first new element is :: " + myList);
		 
		 myList.addLast("Durairam");   // This method does not exist in ArrayList
		 System.out.println("my list is after adding last new element is :: " + myList);
		 
		 myList.add(2, "Subhdarshini");
		 System.out.println("my list is after adding new element in the middle is :: " + myList);
		 
		 myList.remove(1);
		 System.out.println("my list is after removal of element is :: " + myList);

	}
	
}


======================================================================================================


Set is an interface.
HashSet is class.

Important Thing about set is : 
It does not allow duplicates.
It does not work on index level.
No Insertion Order is saved in Set.

package createqadoc.CreateQADoc;

import java.util.HashSet;
import java.util.Set;

public class SetImplementation {

	public static void main(String[] args) {
		myMethodForSetUnderstanding();
	}
	
	public static void myMethodForSetUnderstanding() {
		
		Set<String> mySet = new HashSet<>();
		
		mySet.add("Apple");
		mySet.add("Banana");
		mySet.add("Kiwi");
		mySet.add("Potato");
		System.out.println(mySet); // There is no insertion order in the Set (does not work on index level)
		mySet.add("Potato");
		System.out.println(mySet); // Duplicate values are not allowed in Set
		
		
//		 12, 16, 20, 67, 12, 78, 90, 82, 12, 16,20, 20, 21, 20 - ArrayList
//		create a set of above numbers so that all the unique values will be fetched
//		 compare set with the List to get the iteration(no. of count) of all the integer values
		
	}

}


=============================================================================================

Exception Handling : 

Exception : 
Anything which is going wrong in my program (interruption) / error.

Why to handle this exception : 
So that we can have an idea why and where the error is there in the code and we can fix it.

package createqadoc.CreateQADoc;

public class BasicOfExceptionHandling {

	public static void main(String[] args) {

		int[] myArray = new int[10];
		
		try { 
			System.out.println(myArray[15]);
		}
		catch (Exception e) {
			e.printStackTrace();
		}
	}

}


===================================================================================================

Assignment : 

Task 1 : Create one ArrayList and one LinkedList and write a program to add 10 numbers and then delete 2 numbers 
at index 5 and 6.

Task 2 : Create a list and add 10 values and create a new Hashmap and put all these 10 values in a Hashmap as : 

key is 1,2,3,4,5,6,7,8,9,10
value : 10 values in the list

1 - Himanshu
2 - Subhadarshini
3- Anmol
4 - Anish

Task 3 : Create a set and try to include duplicate in set, and check whether it is allowed or not ?


====================================================================================================

Task 1: 

Create an ArrayList of 10 String values and Paste it in 2 Hashmaps.

1st Hashmap : 

1=Himanshu
2=Subhadarshini
3=Deepa
4=Prasanthi
5=Abhiramasundari

2nd HashMap : 
6=Himanshu
7=Anmol
8=Manish
9=Anish
10=Mohammed

Task 2 : 
Create an ArrayList of 10 values.
Paste it in a Hashmap like : 1,StringValue1    2,StringValue2 and so on.
Create a new LinkedList and add the values of hashmap in this linkedList.

====================================================================================================


package basicJavaPrograms;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

public class ArrayListHashMapAssignment1 {

	static List<String> myList = new ArrayList<>();

	public static void main(String[] args) {
		addValuesToList();
		firstHashMapHavingValuesFromList();
		secondHashMapHavingValuesFromList();
	}

	public static void addValuesToList() {
		myList.add("Himanshu");
		myList.add("Subhadarshini");
		myList.add("Deepa");
		myList.add("Prasanthi");
		myList.add("Abhiramasundari");
		myList.add("Himanshu");
		myList.add("Anmol");
		myList.add("Manish");
		myList.add("Anish");
		myList.add("Mohammed");
	}

	public static int getSizeOfMyList() {
		int sizeOfMyList = myList.size();
		return sizeOfMyList;
	}

	public static void firstHashMapHavingValuesFromList() {
		HashMap<Integer, String> myMap1 = new HashMap<>();
		int sizeOfMyList = getSizeOfMyList();
		for(int index=0;index<sizeOfMyList/2;index++) {
                 myMap1.put(index+1, myList.get(index));
		}
	   System.out.println("hashMap 1 is :: " + myMap1);
	}
	
	public static void secondHashMapHavingValuesFromList() {
		HashMap<Integer, String> myMap2 = new HashMap<>();
		int sizeOfMyList = getSizeOfMyList();
		for(int index=5;index<sizeOfMyList;index++) {
                 myMap2.put(index+1, myList.get(index));
		}
	   System.out.println("hashMap 2 is :: " + myMap2);
	}

}


=============================================================================================

Another way to do it : 


package basicJavaPrograms;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

public class ArrayListHashMapAssignment1 {

	static List<String> myList = new ArrayList<>();
	static int sizeOfList;

	public static void main(String[] args) {
		addValuesToList();
		firstHashMapHavingValuesFromList();
		secondHashMapHavingValuesFromList();
	}

	public static void addValuesToList() {
		myList.add("Himanshu");
		myList.add("Subhadarshini");
		myList.add("Deepa");
		myList.add("Prasanthi");
		myList.add("Abhiramasundari");
		myList.add("Himanshu");
		myList.add("Anmol");
		myList.add("Manish");
		myList.add("Anish");
		myList.add("Mohammed");
		sizeOfList = myList.size();
	}

	public static void firstHashMapHavingValuesFromList() {
		HashMap<Integer, String> myMap1 = new HashMap<>();
		for(int index=0;index<sizeOfList/2;index++) {
                 myMap1.put(index+1, myList.get(index));
		}
	   System.out.println("hashMap 1 is :: " + myMap1);
	}
	
	public static void secondHashMapHavingValuesFromList() {
		HashMap<Integer, String> myMap2 = new HashMap<>();
		for(int index=5;index<sizeOfList;index++) {
                 myMap2.put(index+1, myList.get(index));
		}
	   System.out.println("hashMap 2 is :: " + myMap2);
	}

}



===========================================================================================
Task 2 : 

package basicJavaPrograms;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

public class ProblemSolving2 {

	static List<String> myArrayList = new ArrayList<>();
	static List<String> myLinkedList = new ArrayList<>();
	static HashMap<Integer, String> myMap = new HashMap<>();
	
	public static void main(String[] args) {
		myArrayList.add("Himanshu");
		myArrayList.add("Subhadarshini");
		myArrayList.add("Deepa");
		myArrayList.add("Prasanthi");
		myArrayList.add("Abhiramasundari");
		myArrayList.add("Himanshu");
		myArrayList.add("Anmol");
		myArrayList.add("Manish");
		myArrayList.add("Anish");
		myArrayList.add("Mohammed");
		
		for(int index=0;index<myArrayList.size();index++) {
			myMap.put(index+1, myArrayList.get(index));
		}
		System.out.println(myMap);

		for(int index=0;index<myArrayList.size();index++) {
			myLinkedList.add(index, myMap.get(index+1));
		}
		System.out.println(myLinkedList);
}
}




===========================================================================================

TreeMap:

TreeMap works in a similar way like HashMap but : 

HashMap allows one null key and TreeMap does not allow any null key.
HashMap allows multiple null values but TreeMap does not allow any null value.
HashMap does not have keys in the ordered way (asceding) but Treemap has keys in ordered form (ordered does not mean indexing).
TreeMap implemets map interface like Hashmap implements Map interface.

===========================================================================================

package basicJavaPrograms;

import java.util.TreeMap;

public class TreeMapImplementation {

	public static void main(String[] args) {
		myMethodToUnderstandTreeMap();
	}
	
	public static void myMethodToUnderstandTreeMap() {
		
		TreeMap<String, String> myTreeMap = new TreeMap<>();
		myTreeMap.put("Himanshu", "Mentor");
		myTreeMap.put("Prasanthi", "Student");
		myTreeMap.put("Manish", "Learner");
		myTreeMap.put("Anmol", "Leaner");
		System.out.println(myTreeMap);
		
	}

}

==============================================================================================

How to sort TreeMap values using Collections.sort : 

package basicJavaPrograms;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.TreeMap;

public class TreeMapImplementation {

	public static void main(String[] args) {
		myMethodToUnderstandTreeMap();
	}
	
	public static void myMethodToUnderstandTreeMap() {
		
		TreeMap<Integer, String> myTreeMap = new TreeMap<>();
		myTreeMap.put(1, "Mentor");
		myTreeMap.put(2, "Student");
		myTreeMap.put(3, "Learner");
		myTreeMap.put(4, "ExpertLearner");
		System.out.println(myTreeMap);
		
		List<String> myList = new ArrayList<>(myTreeMap.values());
		Collections.sort(myList);
		System.out.println(myList);
	}

}

============================================================================================


Exception Handling :

- Anything unwanted/unexpected issue we are getting in the code is an exception.
- We need to handle such exception else our code will be stopped then and there (where we are getting the exception).
- We use try, catch, finally blocks to handle exception.
- We use throw and throws to handle exception.
- Exception is a class in Java that is the parent of all the other exception classes like : ArrayIndexOutOfBoundsException, NullPointerException etc.
- There are 2 types of exception :

- Checked Exception
- Unchecked Exception.

Checked Exception occurs at Compile time.
Unchecked Exception occurs at Runtime.

============================================================================================

Whenever we have anything risky, we can put it in a try block and we can catch the exception in catch block.

Whenever we get the exception, the code after it will not be executed : 

package basicJavaPrograms;

public class ExceptionHandling {

	public static void main(String[] args) {
		arrayIndexOutOfBoundException();
	}
	
	public static void arrayIndexOutOfBoundException() {
		String[] myArray = new String[2];
		myArray[0] = "Subhadarshini";
		myArray[1] = "Sathya";
		System.out.println("================Code execution is Started==============================");
		System.out.println(myArray[0]);
		System.out.println(myArray[1]);
		System.out.println(myArray[2]);
		System.out.println("================Code execution is done=================================");
	}

}




==========================================================================================================

handle with try and catch : 


try {

}

catch() {

}

=====================================================================

package basicJavaPrograms;

public class ExceptionHandling {

	public static void main(String[] args) {
		arrayIndexOutOfBoundException();
	}
	
	public static void arrayIndexOutOfBoundException() {
		try {
		String[] myArray = new String[2];
		myArray[0] = "Subhadarshini";
		myArray[1] = "Sathya";
		System.out.println("================Code execution is Started==============================");
		System.out.println(myArray[0]);
		System.out.println(myArray[1]);
		System.out.println(myArray[2]);
		System.out.println("================Code execution is done=================================");
		}
		catch (Exception e) {
			e.printStackTrace();
		}
	}

}


=====================================================================

So, whenever we get any exception in try block, the code automatically moves the execution to catch block : 

package basicJavaPrograms;

public class ExceptionHandling {

	public static void main(String[] args) {
		arrayIndexOutOfBoundException();
	}
	
	public static void arrayIndexOutOfBoundException() {
		try {
		String[] myArray = new String[2];
		myArray[0] = "Subhadarshini";
		myArray[1] = "Sathya";
		System.out.println("================Code execution is Started==============================");
		System.out.println(myArray[0]);
		System.out.println(myArray[1]);
		System.out.println(myArray[2]);
		}
		catch (Exception e) {
			e.printStackTrace();
			System.out.println("================Code execution is done=================================");
		}
	}

}


=====================================================================

RunTime Exception - It is always our fault.

=====================================================================

package basicJavaPrograms;


public class ExceptionHandling2 {

	public static void main(String[] args) {
		getDivisionOfTwoNumbers(12, 6);
		getDivisionOfTwoNumbers(12, 0);
		getDivisionOfTwoNumbers(12, 2);
	}
	
	public static void getDivisionOfTwoNumbers(int num1, int num2) {
		try {
		int division = num1/num2;
		System.out.println("Division is :: " + division);
		}
		catch (Exception e) {
			System.out.println("Error : Dont use zero as num2");
			e.printStackTrace();
		}
	}
}

=====================================================================
- Whenever you use childException, always use Parent exception at last so that if there is any new child exception comes in your code, that will be 
handled by Exception (parent Exception Class).

- Multiple catch blocks are allowed.

=====================================================================

package basicJavaPrograms;

public class ExceptionHandling3 {

	public static void main(String[] args) {
		getDivisionOfTwoNumbers(12, 6);
		getDivisionOfTwoNumbers(12, 0);
		getDivisionOfTwoNumbers(12, 2);
	}
	
	public static void getDivisionOfTwoNumbers(int num1, int num2) {
		try {
		int division = num1/num2;
		System.out.println("Division is :: " + division);
		}
		catch (NullPointerException e) {
			System.out.println("Error : Dont use zero as num2");
			e.printStackTrace();
		}
		catch (Exception e) {
			System.out.println("Exception Class Error : Dont use zero as num2");
		}
	}

}


=====================================================================

package basicJavaPrograms;

public class ExceptionHandling3 {

	public static void main(String[] args) {
		getDivisionOfTwoNumbers(12, 6);
		getDivisionOfTwoNumbers(12, 0);
		getDivisionOfTwoNumbers(12, 2);
	}
	
	public static void getDivisionOfTwoNumbers(int num1, int num2) {
		try {
		int division = num1/num2;
		System.out.println("Division is :: " + division);
		}
		catch (ArithmeticException e) {
			System.out.println("Error : Dont use zero as num2");
			e.printStackTrace();
		}
	}

}


=====================================================================

Why to use multiple catch blocks : 

package basicJavaPrograms;

public class ExceptionHandling3 {

	public static void main(String[] args) {
		getDivisionOfTwoNumbers(12, 6);
		getDivisionOfTwoNumbers(12, 0);
		getDivisionOfTwoNumbers(12, 2);
	}
	
	public static void getDivisionOfTwoNumbers(int num1, int num2) {
		try {
		int division = num1/num2;
		System.out.println("Division is :: " + division);
		}
		catch (ArithmeticException e) {
			System.out.println("Error : Dont use zero as num2");
			e.printStackTrace();
		}
		catch (NullPointerException e) {
			System.out.println("dont use any null value");
		}
		catch (Exception e) {
			System.out.println("Something went wrong");
		}
	}

}



=====================================================================


Finally block : 

1) Only one finally block is allowed.
2) This will always be executed even if there is no exception in try.
3) Finally block will always be executed.
4) Finally block is used to write some important code like dbConnectionClose, ExcelClose, DriverQuite etc.

=====================================================================


whenever we are using try, 
it is always mandatory to use either catch / finally or both of these.

=====================================================================

try {

}

catch() {

}

finally {

}

=====================================================================

package basicJavaPrograms;

public class ExceptionHandling4 {

	public static void main(String[] args) {
		method2ForUnderstandingFinally();
	}

	public static void methodForUnderstandingFinally() {
		try {
			int[] myArray = new int[2];
		}
		catch (Exception e) {
			System.out.println("I am catching exception");
		}
		finally {
			System.out.println("Dont worry I will always be executed");
		}
	}
	
	public static void method2ForUnderstandingFinally() {
		try {
			int[] myArray = new int[2];
			System.out.println(myArray[10]);
		}
		catch (Exception e) {
			System.out.println("I am catching exception");
		}
		finally {
			System.out.println("Dont worry I will always be executed");
		}
	}
	
}


=====================================================================

Throws keyword : 

- It is just to help the other developrs so that if they are using the method they can handle the exception.
- throws is used near the method signature (methodName where we have created the method).
- throws is just an information that whenever you are calling this method, this can have the mentioned exception (mentioned near method signature)

=====================================================================

package basicJavaPrograms;

public class ExceptionHandling5 {

	public static void main(String[] args) {
		try {
		methodToUnderstandThrows();
		}
		catch (ArrayIndexOutOfBoundsException e) {
			System.out.println("I have handled ArrayIndexOutOfBoundsException exception");
		}
	}
	
	public static void methodToUnderstandThrows()throws ArrayIndexOutOfBoundsException {
		int[] myArray = new int[2];
		myArray[0] = 23;
		myArray[1] = 56;
		for(int index=0;index<=myArray.length;index++) {
			System.out.println(myArray[index]);
		}
	}

}


======================================================================

throw keyword is used to have our own customized exception.

======================================================================

throw is added in the code whenver we need to explicitly print the exception.

======================================================================

package basicJavaPrograms;

public class ExceptionHandling6 {

	public static void main(String[] args) {
		methodToUnderstandThrow(23);
		methodToUnderstandThrow(123);
	}

	public static void methodToUnderstandThrow(int a) {
		
		int age = a;
		if (age > 100) {
			throw new ArithmeticException("Please enter correct age");
		}
		else {
			System.out.println("Your age is :: " + age);
		}
		
	}
}


========================================================================

package basicJavaPrograms;

public class ExceptionHandling6 {

	public static void main(String[] args) {
		methodToUnderstandThrow(23);
		methodToUnderstandThrow(123);
		methodToUnderstandThrow(500);
	}

	public static void methodToUnderstandThrow(int a) {
		
		int age = a;
		if (age > 100) {
			throw new ArithmeticException();
		}
		else {
			System.out.println("Your age is :: " + age);
		}
		
	}
}


========================================================================

package basicJavaPrograms;

public class ExceptionHandling6 {

	public static void main(String[] args) {
		methodToUnderstandThrow(23);
		methodToUnderstandThrow(123);
		methodToUnderstandThrow(5);
	}

	public static void methodToUnderstandThrow(int a) {
		try {
		int age = a;
		if (age > 100) {
			throw new ArithmeticException("Please enter the correct age");
		}
		else {
			System.out.println("Your age is :: " + age);
		}
		}
		catch (ArithmeticException e) {
			System.out.println("handle this");
		}
		
	}
}


===========================================================================

use only try and finally (when we dont want to catch the exception using catch) :

package basicJavaPrograms;

public class ExceptionHandling7 {
	
	public static void main(String[] args) {
		useTryAndFinally();
	}
	
	public static void useTryAndFinally() {
		try { 
			int[] i = new int[2];
			System.out.println("Array creation is done");
		}
		finally {
			System.out.println("I will always be executed");
		}
	}

}


============================================================================

package basicJavaPrograms;

public class ExceptionHandling7 {
	
	public static void main(String[] args) {
		useTryAndFinally();
	}
	
	public static void useTryAndFinally() {
		try { 
			int[] i = new int[2];
			System.out.println("Array creation is done");
		}
		finally {
			System.out.println("Database has been closed");
			System.out.println("=== Done =====");
		}
	}

}


============================================================================

This question is just for the interview purpose :-------------------

What is a case when finally will not be executed : 

Answer : Finally block will always be executed but there are cases when it will not be executed also : 

Case 1 : When we use System.exit();

package basicJavaPrograms;

public class ExceptionHandling7 {
	
	public static void main(String[] args) {
		useTryAndFinally();
	}
	
	public static void useTryAndFinally() {
		try { 
			int[] i = new int[2];
			System.out.println("Array creation is done");
			System.exit(0);
		}
		finally {
			System.out.println("Database has been closed");
			System.out.println("=== Done =====");
		}
	}

}

Case 2 : If we have any exception in the finally block also, the complete finally block will not be executed.

package basicJavaPrograms;

public class ExceptionHandling7 {
	
	static int[] myArray = new int[2];
	
	public static void main(String[] args) {
		useTryAndFinally();
	}
	
	public static void useTryAndFinally() {
		try { 
			System.out.println("Array creation is done");
		}
		finally {
			System.out.println(myArray[10]);
			System.out.println("Database has been closed");
			System.out.println("=== Done =====");
		}
	}

}


=========================================================================================

18-Nov-2024 :

Read the data from Excel :

APACHE POI Library - Java Library

We never call excel file as excel in APACHE POI.

We call it as "workbook".


WORKBOOK
SHEET
ROW
COLUMN
CELL


===========================================================================================

REVIEW TASK FOR JAVA : 

PROJECT : 

School Management System : 

Students 
Teachers

- Register Students.
- Assign the teachers to Subject.
- Display the details of Teachers.

TO DO : 

1. Encapsulation : 
Create any class that has private fields for creating getters and setters method.

2.Inheritance
Parent Class -> Person
Child Classes -> Student and Teacher (both the classes have common properties like name, age from Person class).

3.Polymorphism
Create one class that has method : 
behave() -> We have the code how students behaves 
behave() -> We have the code how teachers behaves

4.Abstraction
abstractClassForTeacher{
work();
}
Teacher Class extends this abstract class and implement work method and have some in this work method.

====================================================================================================

Java Project : 

In Java Project, we need download the JARS manually and we need to add them in the build Path of the project.

Maven Project : 
We dont need to download any JAR manually and we can simply add the dependencies in POM>xml file and we are done.

====================================================================================================

How to create a MAVEN Project : 

Go to File -> New -> Project -> Maven Project -> Next -> Select any quickstart archietype -> Give any name in artifact ID -> Click FINISH.
In console, We need to write Y
Press Enter.

Maven Project Creation is done (you will see a message as BUILD SUCCESS).

===================================================================================================

POM.xml : 

<dependencies>

<dependency>
</dependency>

<dependency>
</dependency>

<dependency>
</dependency>

<dependency>
</dependency>

</dependencies>

====================================================================================================

Automation Testing : 

- It is used to create the sanity suite, regression suite etc.

what are the cases when we should not use automation : 

1) When our build is not stable.

Myntrabuild1.21.1 - This build is not stable.
Myntrabuild1.22.1

2) When we dont have to execute the script regularly (means as an regression suite etc).

======================================================================================================

Automation saves time.
Automation increases the chances of catching bugs (less bug leakage on production).

======================================================================================================

For automation, there are so many tools that we have like : 

Selenium, QTP (UFT), Protractor, Cypress, TOSCA, Appium, Playwright, Eggplant Automation, Rest Assured, Karate Framework.

Selenium - Web Automation
QTP (UFT) - Desktop Applications Automation
Cypress, Protractor, Playwright - Web Automation
TOSCA - Web Application Automation, API Automation etc.
Rest Assured - API Automation.
Karate - UI Automation (Web Automation) and API Automation.


======================================================================================================

Selenium supports multiple languages.
Selenium is an open source tool.
Selenium is free tool.

Selenium is of 4 types : 

1) Selenium IDE (Which is never used).
2) Selenium RC (which is never used).
3) Selenium WebDriver (This is very much useful).
4) Selenium Grid (This is rarely used when we are supposed to execute our scripts parallely).

=====================================================================================================

Selenium IDE :-
- Selenium IDE is never used by any IT company. We never use it.
- Selenium IDE is a Mozilla Firefox extension.
- Selenium IDE is having plug and play feature.
- We can rarely customize our scripts with Selenium IDE.
- No Language support like Java, C Language etc. That is the reason we can not build logics in Selenium IDE. 
(We cant use any loop like for loop, if else statement etc).

======================================================================================================

Selenium is used to automate WebApplicatios (we cant automation Desktop Application, Mobile Web Application, Mobile apps with selenium).

WebApplication like : https://www.myntra.com, Flipkart.com etc. etc.
WebElement : Any element that is displayed on a webpage is a webelement.

Selenium Locators : 
Locators are used in selenium to locate an element.

1) ID
2) CssSelector
3) ClassName
4) Name
5) TagName
6) LinkText
7) PartialLinkText
8) XPath -> Absolute XPath and Relative XPath

Note : Whenever you create a selenium locator for any element, we need to create it in a way that it should uniquely identify the element.

========================================================================================================

ID : 

This is very simple.
This is always unique for an element.
Two element can never same ID.

We should always use ID locator when we have an ID for an element.

HERE COMES THE VERY IMPORTANT QUESTION FOR THE INTERVIEW : 

We have the id of an element, still it is not recommended to use ID for that element, in which case it is possible ?

When the value of ID is unique but its getting changed everytime (dynamic).

id = YZRp03_fullname
id = HZdP7v_fullname

id -> attribute name
YZRp03_fullname -> value of id attribute
HZdP7v_fullname -> value of id attribute

Task : Go to myntra.com, flipkart.com and find 10 elements which has ID attribute.

----------------------------------------------------------------------------------------------------------

HTML Structure : 

<div>  - html opening tag
</div> - html closing tag

<div attributeName = attributeValue> </div>
<div id=112HJK class="123JJKL" name="firstName" title="fname"> </div>

==========================================================================================================

https://www.amazon.in/

We need to find 50 elements with ID attribute and value.

==========================================================================================================

Another Attribute : 

name = firstName

name is an attribute
firstName is the value

==========================================================================================================

ClassName : 

ClassName = "ABHCGG78JI"

ClassName is an attribute.
ABHCGG78JI is the value.

==========================================================================================================

LinkText : 

<a>  - This is an opening tag of a
</a> - This is the closing tage of a

Any Text that is written in between of the opening and the closing tag is the LinkText.

<a> Gmail </a>

This Gmail is the LinkText.

==========================================================================================================

In above example, any word that will be there in GMAIL is the partial Link Text :

Gmai - PartialLinkText
Gma - PartialLinkText
Gm - PartialLinkText
mail - PartialLinkText
mai - PartialLinkText
ail - PartialLinkText

=========================================================================================================

<div>   India   </div>

This India is a link text.

Any text in between the opening tag and the closing tag of any tag is the link Text.

=========================================================================================================

Find any 20 Link Text on Shiksha.com

=========================================================================================================

Giving you 5 minutes to add "Selenium IDE" extension in your firefox browser, try to record and execute 4-5 lines for any website.

=========================================================================================================

Selenium WebDriver :

WebDriver is an interface.

What is an interface.
Any Class that is implementing an interface needs to implement interface methods.

Chrome Browser -> To execute anything manually.
Chrome Driver -> To execute anuthing via automation.

It means for every browser, we have a dedicated driver to execute the script on that particular browser.

If we need to execute my script on firefox browser using automation, I need to have firefox driver.
If we need to execute my script on safari browser using automation, I need to have safari driver.
If we need to execute my script on IE browser using automation, I need to have IE driver.
If we need to execute my script on Edge browser using automation, I need to have EDGE driver.

If I need to execute my script on Chrome Browser then 3 things are needed :

1) Selenium
2) JAVA
3) ChromeDriver

new ChromeDriver(); // If we create the object of ChromeDriverClass then the chrome browser opens up.
(When we say chrome browser opens up means : Chrome Browser will be instantiated (chrome browser will be opened)).


ChromeDriver driver = new ChromeDriver();

Whenever we execute the above line, Chrome Browser will be opened and the instance will be saved in the variable named as "driver".

=======================================================================================================

When we can simply use ChromeDriver driver = new ChromeDriver() then what is the use of WebDriver ??
This is a very important question for the interview :

package basicJavaPrograms;

public interface WebDriverDummyInterface {
	
	void click();
	void sendKeys(String myStr); 
	
}


package basicJavaPrograms;

public class ChromeDriverDummyClass implements WebDriverDummyInterface{

	@Override
	public void click() {
		System.out.println("This method is used to click an element in Chrome");
	}

	@Override
	public void sendKeys(String myStr) {
		System.out.println("This method is used to enter text in a element in Chrome");
	}

}


package basicJavaPrograms;

public class FirefoxDriverDummyClass implements WebDriverDummyInterface{

	@Override
	public void click() {
		System.out.println("This method is used to click an element in FireFox");
	}

	@Override
	public void sendKeys(String myStr) {
		System.out.println("This method is used to enter text in a element in FireFox");
	}
	
	public void method3() {
		
	}

}


package basicJavaPrograms;

public class ClassExecutingTheScriptUsingWebDriver {

	public static void main(String[] args) {

		ChromeDriverDummyClass myClass1 = new ChromeDriverDummyClass();
		myClass1.click();
		myClass1.sendKeys("Age is 36");
		
		FirefoxDriverDummyClass myClass2 = new FirefoxDriverDummyClass();
		myClass2.click();
		myClass2.sendKeys("Age is 40");
		
	}

}

Output : 
This method is used to click an element in Chrome
This method is used to enter text in a element in Chrome
This method is used to click an element in FireFox
This method is used to enter text in a element in FireFox

package basicJavaPrograms;

public class ClassExecutingTheScriptUsingWebDriver {

	public static void main(String[] args) {

		WebDriverDummyInterface myClass1 = new ChromeDriverDummyClass();
		myClass1.click();
		myClass1.sendKeys("Age is 36");
		
		WebDriverDummyInterface myClass2 = new FirefoxDriverDummyClass();
		myClass2.click();
		myClass2.sendKeys("Age is 40");
		
	}

}

Output :
This method is used to click an element in Chrome
This method is used to enter text in a element in Chrome
This method is used to click an element in FireFox
This method is used to enter text in a element in FireFox

package basicJavaPrograms;

public class ClassExecutingTheScriptUsingWebDriver {

	public static void main(String[] args) {

		WebDriverDummyInterface driver = new ChromeDriverDummyClass();
		driver.click();
		driver.sendKeys("Age is 36");
		
		driver = new FirefoxDriverDummyClass();
		driver.click();
		driver.sendKeys("Age is 40");
		
	}

}

Output :
This method is used to click an element in Chrome
This method is used to enter text in a element in Chrome
This method is used to click an element in FireFox
This method is used to enter text in a element in FireFox




/* One use of WebDriver is that : Any class that implements WebDriver, will have to add all the unimplemented 
methods of that interface.

*/ When we use WebDriver, we can change the value of the reference variable (driver) at any time :
WebDriver driver = new ChromeDriver();
driver = new FirefoxDriver();

======================================================================================================

SETUP FOR SELENIUM : 

1) Create a MAVEN Project
2) Go to google/ChatGPT and add 2 dependencies in POM.xml : 1) Selenium-Java 2)WebDriverManager

WE ARE DONE !!

======================================================================================================

package GuviMavenProjectForEveningBatch.EveningBatchMavenProject;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;

import io.github.bonigarcia.wdm.WebDriverManager;

public class SeleniumSetupForEveningBatch {
	
	static WebDriver driver;
	
	public static void main(String[] args) {
		new SeleniumSetupForEveningBatch();
		getURL();
		maximizeWindow();
		waitForFixTime(4000); 
		minimizeWindow();
	}
	
	public SeleniumSetupForEveningBatch() {
		
		// SetUp ChromeDriver
		WebDriverManager.chromedriver().setup();
		// Open Browser
		driver = new ChromeDriver();
		
		// Maximize the browser/window
		
		
	}

	public static void getURL() {
		driver.get("https://www.google.com");
	}
	
	public static void maximizeWindow() {
		driver.manage().window().maximize();
	}
	
	public static void minimizeWindow() {
		driver.manage().window().minimize();
	}
	
	public static void waitForFixTime(int Time) {
		try {
			Thread.sleep(Time);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
}


===============================================================================

package GuviMavenProjectForEveningBatch.EveningBatchMavenProject;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;

import io.github.bonigarcia.wdm.WebDriverManager;

public class SeleniumSetupForEveningBatch {
	
	static WebDriver driver;
	
	public static void main(String[] args) {
		new SeleniumSetupForEveningBatch();
		getURL();
		maximizeWindow();
		waitForFixTime(4000); 
		closeWindow();
	}
	
	public SeleniumSetupForEveningBatch() {
		
		// SetUp ChromeDriver
		WebDriverManager.chromedriver().setup();
		// Open Browser
		driver = new ChromeDriver();
		
		// Maximize the browser/window
		
		
	}

	public static void getURL() {
		driver.get("https://www.google.com");
	}
	
	public static void maximizeWindow() {
		driver.manage().window().maximize();
	}
	
	public static void minimizeWindow() {
		driver.manage().window().minimize();
	}
	
	public static void closeWindow() {
		driver.close();
	}
	
	public static void waitForFixTime(int Time) {
		try {
			Thread.sleep(Time);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
}


====================================================================================

package GuviMavenProjectForEveningBatch.EveningBatchMavenProject;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;

import io.github.bonigarcia.wdm.WebDriverManager;

public class SeleniumSetupForEveningBatch {
	
	static WebDriver driver;
	
	public static void main(String[] args) {
		new SeleniumSetupForEveningBatch();
		getURL();
		maximizeWindow();
		waitForFixTime(4000); 
		quitWindow();
	}
	
	public SeleniumSetupForEveningBatch() {
		
		// SetUp ChromeDriver
		WebDriverManager.chromedriver().setup();
		// Open Browser
		driver = new ChromeDriver();
		
		// Maximize the browser/window
		
		
	}

	public static void getURL() {
		driver.get("https://www.google.com");
	}
	
	public static void maximizeWindow() {
		driver.manage().window().maximize();
	}
	
	public static void minimizeWindow() {
		driver.manage().window().minimize();
	}
	
	public static void closeWindow() {
		driver.close();
	}
	
	public static void quitWindow() {
		driver.quit();
	}
	
	public static void waitForFixTime(int Time) {
		try {
			Thread.sleep(Time);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
}


==========================================================================================

Very Important Question For The Interview : 

What is the difference between driver.quit() and driver.close();

driver.quit() - closes all the browser instances that has been opened.
driver.close() - close only the current browser instance.

==========================================================================================

How to launch Google.com and Search for "Temparature In Chennai" Using Selenium Locator (ID) : 

package GuviMavenProjectForEveningBatch.EveningBatchMavenProject;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;

import io.github.bonigarcia.wdm.WebDriverManager;

public class SeleniumLocatorID {

	static WebDriver driver;
	
	public static void main(String[] args) {
		WebDriverManager.chromedriver().setup();
		driver = new ChromeDriver();
		driver.get("https://www.google.com");
		WebElement myElement =  driver.findElement(By.id("APjFqb"));
		myElement.sendKeys("Temparature in Chennai");
	}
}

============================================================================================

package GuviMavenProjectForEveningBatch.EveningBatchMavenProject;

import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;

import io.github.bonigarcia.wdm.WebDriverManager;

public class SeleniumLocatorID {

	static WebDriver driver;
	
	public static void main(String[] args) {
		WebDriverManager.chromedriver().setup();
		driver = new ChromeDriver();
		driver.get("https://www.google.com");
		WebElement myElement =  driver.findElement(By.id("APjFqb"));
		myElement.sendKeys("Temparature in Chennai");
		SeleniumSetupForEveningBatch.waitForFixTime(2000);
		myElement.clear();
		myElement.sendKeys("Temparature in Delhi");
		myElement.sendKeys(Keys.ENTER);
	}
}

===============================================================================================

package GuviMavenProjectForEveningBatch.EveningBatchMavenProject;

import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;

import io.github.bonigarcia.wdm.WebDriverManager;

public class SeleniumLocatorID {

	static WebDriver driver;
	
	public static void main(String[] args) {
		WebDriverManager.chromedriver().setup();
		driver = new ChromeDriver();
		driver.get("https://www.google.com");  // driver.get is to open a URL
		driver.manage().window().maximize(); // Maximize window
		WebElement myElement =  driver.findElement(By.id("APjFqb")); // Finding the element using ID locator
		myElement.sendKeys("Temparature in Chennai"); // Enter any value in textBox using sendKeys() method
		myElement.sendKeys(Keys.ENTER); // Press "Enter" key
		driver.navigate().back();  // To go back in browser
		SeleniumSetupForEveningBatch.waitForFixTime(2000); // Thread.sleep only
		myElement.clear(); // to clear any input box
		myElement.sendKeys("Temparature in Delhi"); // Enter any value in textBox using sendKeys() method
		myElement.sendKeys(Keys.ENTER); // Press "Enter" key
	}
}


=====================================================================================================

Find Temparature in Chennai and Temparature in Delhi

package GuviMavenProjectForEveningBatch.EveningBatchMavenProject;

import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;

import io.github.bonigarcia.wdm.WebDriverManager;

public class SeleniumLocatorID {

	static WebDriver driver;
	
	public static void main(String[] args) {
		WebDriverManager.chromedriver().setup();
		driver = new ChromeDriver();
		driver.get("https://www.google.com");  // driver.get is to open a URL
		driver.manage().window().maximize(); // Maximize window
		WebElement myElement =  driver.findElement(By.id("APjFqb")); // Finding the element using ID locator
		myElement.sendKeys("Temparature in Chennai"); // Enter any value in textBox using sendKeys() method
		myElement.sendKeys(Keys.ENTER); // Press "Enter" key
		WebElement myElement2 = driver.findElement(By.id("wob_tm"));
		String temparature = myElement2.getText();
		System.out.println("Temprature in Chennai is :: " + temparature + " 0C");
		driver.navigate().back();  // To go back in browser
		SeleniumSetupForEveningBatch.waitForFixTime(2000); // Thread.sleep only
		myElement.clear(); // to clear any input box
		myElement.sendKeys("Temparature in Delhi"); // Enter any value in textBox using sendKeys() method
		myElement.sendKeys(Keys.ENTER); // Press "Enter" key
		myElement2 = driver.findElement(By.id("wob_tm"));
		temparature = myElement2.getText();
		System.out.println("Temprature in Delhi is :: " + temparature + " 0C");
	}
}


===========================================================================================================

Selenium Locator Name : 

package GuviMavenProjectForEveningBatch.EveningBatchMavenProject;

import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;

import io.github.bonigarcia.wdm.WebDriverManager;

public class SeleniumLocatorName {
	
	static WebDriver driver;

	public static void main(String[] args) {
		WebDriverManager.chromedriver().setup();
		driver = new ChromeDriver();
		driver.get("https://www.google.com");  // driver.get is to open a URL
		driver.manage().window().maximize(); // Maximize window
		WebElement myElement =  driver.findElement(By.name("q"));
		myElement.sendKeys("New Song In Bollywood");
		myElement.sendKeys(Keys.ENTER);
	}

}


==========================================================================================================

Selenium Locator ClassName : 

package GuviMavenProjectForEveningBatch.EveningBatchMavenProject;

import org.checkerframework.checker.units.qual.m;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;

import io.github.bonigarcia.wdm.WebDriverManager;

public class SeleniumLocatorClassName {
	
	static WebDriver driver;

	public static void main(String[] args) {
		WebDriverManager.chromedriver().setup();
		driver = new ChromeDriver();
		driver.get("https://www.google.com");  // driver.get is to open a URL
		driver.manage().window().maximize(); // Maximize window
		WebElement myElement =  driver.findElement(By.className("gLFyf")); // Dont Use ClassName if its having spaces in its value
		myElement.sendKeys("New English Song");
		myElement.sendKeys(Keys.ENTER);
	}

}

==============================================================================================================

Selenium Locator LinkText : 

package GuviMavenProjectForEveningBatch.EveningBatchMavenProject;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import io.github.bonigarcia.wdm.WebDriverManager;

public class SeleniumLocatorLinkText {
	
	static WebDriver driver;

	public static void main(String[] args) {
		WebDriverManager.chromedriver().setup();
		driver = new ChromeDriver();
		driver.get("https://www.google.com");  // driver.get is to open a URL
		driver.manage().window().maximize(); // Maximize window
		WebElement myElement = driver.findElement(By.linkText("Gmail"));
		myElement.click();
	}

}


==============================================================================================================

We have a word as "Subhadarshini" 

Complete Word Is : Subhadarshini (linkText)

Partial words are (partialLinkText) : 

Subha
Darshini
Subh
shini
hadarsh
ubhad
ini
Subhadars
bhadar


VERY GOOD QUESTION : 

2 elements on the page : 

1) Subhadarshini   2) Subha 

driver.findElement(By.partialLinkText("Subha")).click();
// This is a risky code.
// We are not allowed to use such locators like this.
// Try to use some other locator because we all know that your locator should always be unique.

driver.findElement(By.linkText("Subha")).click();  // perfect when we are supposed to click on Subha only.
driver.findElement(By.linkText("Subhadarshini")).click(); // perfect when we are supposed to click on Subhadarshini only.

==============================================================================================

Selenium Locator partialLinkText :

package GuviMavenProjectForEveningBatch.EveningBatchMavenProject;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;

import io.github.bonigarcia.wdm.WebDriverManager;

public class SeleniumLocatorPartialLinkText {
	
	static WebDriver driver;

	public static void main(String[] args) {
		WebDriverManager.chromedriver().setup();
		driver = new ChromeDriver();
		driver.get("https://www.google.com");  // driver.get is to open a URL
		driver.manage().window().maximize(); // Maximize window
		WebElement myElement = driver.findElement(By.partialLinkText("Gmai"));
		myElement.click();
	}

}

===============================================================================================

If we have 2 elements with the same link text then we should not use linktext as a selenium locator.

But there is a workaround, you can use linkText + indexing (in xpath).

===============================================================================================

Selenium Locator : tagName 

package GuviMavenProjectForEveningBatch.EveningBatchMavenProject;

import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import io.github.bonigarcia.wdm.WebDriverManager;

public class SeleniumLocatorTagName {
	
	static WebDriver driver;

	public static void main(String[] args) {
		WebDriverManager.chromedriver().setup();
		driver = new ChromeDriver();
		driver.get("https://www.google.com");  // driver.get is to open a URL
		driver.manage().window().maximize(); // Maximize window
		List<WebElement> myElements =  driver.findElements(By.tagName("a"));
		int totalNumberOfLinks= myElements.size();
		System.out.println("Total links on google.com are :: " + totalNumberOfLinks);
	}

}

Important Question For the Interview : 

What is the return type of findElement : It is WebElement.
What is the return type of findElements : It is List<WebElement>.

===============================================================================================

A very small task : 

Take any website of your choice and try to write selenium locator for 2-2 elements using : 

ID
Name
ClassName
LinkText
PartialLinkText
tagName

================================================================================================

POM.xml : 


<dependencies>

	<dependency>
	
	
	</dependency>

	<dependency>
	
	
	</dependency>


</dependencies>

================================================================================================

Selenium Locator XPATH : 

We have 2 types of Xpath : 

- Absolute XPath
- Relative XPath

================================================================================================

What is absolute XPath : 

It is not recommended to use the absolute XPath.

Absolute XPath of search box on www.flipkart.com
//div[@id="container"]/div/div[1]/div/div/div/div/div[1]/div/div/div/div[1]/div[1]/header/div[1]/div[2]/form/div/div/input

Why Absolute Xpath is never recommended to use ?

If there is any addition or deletion of html tag in your absolute xpath, then your absolute xpath will fail.

/html/body/div[20]
/html/body/div[21]
/html/body/div[16]

driver.findElement(By.xpath("/html/body/div[20]");

driver.findElement(By.xpath("/html/body/div[21]");

Note : Dont never ever use Absolute Xpath.

==================================================================================================

What is relative Xpath : 

The Xpath that is specific to the element that we need to find, inplace of depending on the whole html.

In Relative Xpath, we write the Xpath in a way so that if there is any addition/deletion of any html tag, it rarely impacts my current Xpath.


.//div[contains(text(),'  Himanshu is the mentor ')]
=================================================================================================

There are 20-25 ways to write the XPath, we need to see which type will fit in for our element.

General Syntax of Relative Xpath : 

Type 1 : 
//tagName[@<attributeName>='<attributeValue>']

https://www.google.com/

//textarea[@title='Search']


package GuviMavenProjectForEveningBatch.EveningBatchMavenProject;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;

import io.github.bonigarcia.wdm.WebDriverManager;

public class SeleniumLocatorXpath {

	static WebDriver driver;
	
	public static void main(String[] args) {
		instantiateBrowserWithBaseUrl("https://www.google.com");
		useXpathType1();
	}
	
	public static void instantiateBrowserWithBaseUrl(String baseUrl) {
		WebDriverManager.chromedriver().setup();
		driver = new ChromeDriver();
		driver.manage().window().maximize();
		driver.get(baseUrl);
	}
	
	public static void useXpathType1() {
		driver.findElement(By.xpath("//textarea[@title='Search']")).sendKeys("Himanshu");
	}

}


=================================================================================================

Type2 :
Use id locator inside Xpath : 

Same as we have used in Type1.

//textarea[@id='APjFqb']

package GuviMavenProjectForEveningBatch.EveningBatchMavenProject;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;

import io.github.bonigarcia.wdm.WebDriverManager;

public class SeleniumLocatorXpath {

	static WebDriver driver;
	
	public static void main(String[] args) {
		instantiateBrowserWithBaseUrl("https://www.google.com");
		useXpathType2();
	}
	
	public static void instantiateBrowserWithBaseUrl(String baseUrl) {
		WebDriverManager.chromedriver().setup();
		driver = new ChromeDriver();
		driver.manage().window().maximize();
		driver.get(baseUrl);
	}
	
	public static void useXpathType1() {
		driver.findElement(By.xpath("//textarea[@title='Search']")).sendKeys("Himanshu");
	}
		
	public static void useXpathType2() {
		driver.findElement(By.xpath("//textarea[@id='APjFqb']")).sendKeys("Himanshu");
	}

}


================================================================================================

Type3 : 
Use LinkText in Xpath : 

//tagName[contains(text(),'linkTextOfTheElement')]

//a[contains(text(),'Gmail')]

package GuviMavenProjectForEveningBatch.EveningBatchMavenProject;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;

import io.github.bonigarcia.wdm.WebDriverManager;

public class SeleniumLocatorXpath {

	static WebDriver driver;
	
	public static void main(String[] args) {
		instantiateBrowserWithBaseUrl("https://www.google.com");
		useXpathType3();
	}
	
	public static void instantiateBrowserWithBaseUrl(String baseUrl) {
		WebDriverManager.chromedriver().setup();
		driver = new ChromeDriver();
		driver.manage().window().maximize();
		driver.get(baseUrl);
	}
	
	public static void useXpathType1() {
		driver.findElement(By.xpath("//textarea[@title='Search']")).sendKeys("Himanshu");
	}
	
	public static void useXpathType2() {
		driver.findElement(By.xpath("//textarea[@id='APjFqb']")).sendKeys("Himanshu");
	}
	
	public static void useXpathType3() {
		driver.findElement(By.xpath("//a[contains(text(),'Gmail')]")).click();
	}

}


================================================================================================

Type4 : Use PartialLinkText in Xpath : 

//tagName[contains(text(),'partialLinkTextOfTheElement')]

//a[contains(text(),'Gma')]


package GuviMavenProjectForEveningBatch.EveningBatchMavenProject;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;

import io.github.bonigarcia.wdm.WebDriverManager;

public class SeleniumLocatorXpath {

	static WebDriver driver;
	
	public static void main(String[] args) {
		instantiateBrowserWithBaseUrl("https://www.google.com");
		useXpathType4();
	}
	
	public static void instantiateBrowserWithBaseUrl(String baseUrl) {
		WebDriverManager.chromedriver().setup();
		driver = new ChromeDriver();
		driver.manage().window().maximize();
		driver.get(baseUrl);
	}
	
	public static void useXpathType1() {
		driver.findElement(By.xpath("//textarea[@title='Search']")).sendKeys("Himanshu");
	}
	
	public static void useXpathType2() {
		driver.findElement(By.xpath("//textarea[@id='APjFqb']")).sendKeys("Himanshu");
	}
	
	public static void useXpathType3() {
		driver.findElement(By.xpath("//a[contains(text(),'Gmail')]")).click();
	}
	
	public static void useXpathType4() {
		driver.findElement(By.xpath("//a[contains(text(),'Gma')]")).click();
	}

}

=============================================================================================

Type5 : Use tagName in Xpath : 

//tagName

//textarea

package GuviMavenProjectForEveningBatch.EveningBatchMavenProject;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;

import io.github.bonigarcia.wdm.WebDriverManager;

public class SeleniumLocatorXpath {

	static WebDriver driver;
	
	public static void main(String[] args) {
		instantiateBrowserWithBaseUrl("https://www.google.com");
		useXpathType5();
	}
	
	public static void instantiateBrowserWithBaseUrl(String baseUrl) {
		WebDriverManager.chromedriver().setup();
		driver = new ChromeDriver();
		driver.manage().window().maximize();
		driver.get(baseUrl);
	}
	
	public static void useXpathType1() {
		driver.findElement(By.xpath("//textarea[@title='Search']")).sendKeys("Himanshu");
	}
	
	public static void useXpathType2() {
		driver.findElement(By.xpath("//textarea[@id='APjFqb']")).sendKeys("Himanshu");
	}
	
	public static void useXpathType3() {
		driver.findElement(By.xpath("//a[contains(text(),'Gmail')]")).click();
	}
	
	public static void useXpathType4() {
		driver.findElement(By.xpath("//a[contains(text(),'Gma')]")).click();
	}
	
	public static void useXpathType5() {
		int countOfTextAreaTags = driver.findElements(By.xpath("//textarea")).size();
		System.out.println("total textarea tags are :: " + countOfTextAreaTags);
	}

}

=============================================================================================

Type6 : Use ClassName in Xpath : 

//tagname[@class='classValue']

//textarea[@class='gLFyf']

package GuviMavenProjectForEveningBatch.EveningBatchMavenProject;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;

import io.github.bonigarcia.wdm.WebDriverManager;

public class SeleniumLocatorXpath {

	static WebDriver driver;
	
	public static void main(String[] args) {
		instantiateBrowserWithBaseUrl("https://www.google.com");
		useXpathType6();
	}
	
	public static void instantiateBrowserWithBaseUrl(String baseUrl) {
		WebDriverManager.chromedriver().setup();
		driver = new ChromeDriver();
		driver.manage().window().maximize();
		driver.get(baseUrl);
	}
	
	public static void useXpathType1() {
		driver.findElement(By.xpath("//textarea[@title='Search']")).sendKeys("Himanshu");
	}
	
	public static void useXpathType2() {
		driver.findElement(By.xpath("//textarea[@id='APjFqb']")).sendKeys("Himanshu");
	}
	
	public static void useXpathType3() {
		driver.findElement(By.xpath("//a[contains(text(),'Gmail')]")).click();
	}
	
	public static void useXpathType4() {
		driver.findElement(By.xpath("//a[contains(text(),'Gma')]")).click();
	}
	
	public static void useXpathType5() {
		int countOfTextAreaTags = driver.findElements(By.xpath("//textarea")).size();
		System.out.println("total textarea tags are :: " + countOfTextAreaTags);
	}

	public static void useXpathType6() {
		driver.findElement(By.xpath("//textarea[@class='gLFyf']")).sendKeys("Himanshu");
	}
	
}


=============================================================================================

Type7 : Use name attribute in Xpath : 

//tagName[@name='nameValue']

//textarea[@name='q']

package GuviMavenProjectForEveningBatch.EveningBatchMavenProject;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;

import io.github.bonigarcia.wdm.WebDriverManager;

public class SeleniumLocatorXpath {

	static WebDriver driver;
	
	public static void main(String[] args) {
		instantiateBrowserWithBaseUrl("https://www.google.com");
		useXpathType7();
	}
	
	public static void instantiateBrowserWithBaseUrl(String baseUrl) {
		WebDriverManager.chromedriver().setup();
		driver = new ChromeDriver();
		driver.manage().window().maximize();
		driver.get(baseUrl);
	}
	
	public static void useXpathType1() {
		driver.findElement(By.xpath("//textarea[@title='Search']")).sendKeys("Himanshu");
	}
	
	public static void useXpathType2() {
		driver.findElement(By.xpath("//textarea[@id='APjFqb']")).sendKeys("Himanshu");
	}
	
	public static void useXpathType3() {
		driver.findElement(By.xpath("//a[contains(text(),'Gmail')]")).click();
	}
	
	public static void useXpathType4() {
		driver.findElement(By.xpath("//a[contains(text(),'Gma')]")).click();
	}
	
	public static void useXpathType5() {
		int countOfTextAreaTags = driver.findElements(By.xpath("//textarea")).size();
		System.out.println("total textarea tags are :: " + countOfTextAreaTags);
	}

	public static void useXpathType6() {
		driver.findElement(By.xpath("//textarea[@class='gLFyf']")).sendKeys("Himanshu");
	}
	
	public static void useXpathType7() {
		driver.findElement(By.xpath("//textarea[@name='q']")).sendKeys("Himanshu");
	}
	
}


=========================================================================================

Type8 : Use Indexing in Xpath : 

(xpath)[positionOfYourElement]

Note : One very majar thing to notice is that in Jave, indexing starts from 0 (like for array, List etc).
But for Indexing in Xpath starts with 1.

(//input[@value='Google Search'])[2]

package GuviMavenProjectForEveningBatch.EveningBatchMavenProject;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;

import io.github.bonigarcia.wdm.WebDriverManager;

public class SeleniumLocatorXpath {

	static WebDriver driver;
	
	public static void main(String[] args) throws InterruptedException {
		instantiateBrowserWithBaseUrl("https://www.google.com");
		useXpathType8();
	}
	
	public static void instantiateBrowserWithBaseUrl(String baseUrl) {
		WebDriverManager.chromedriver().setup();
		driver = new ChromeDriver();
		driver.manage().window().maximize();
		driver.get(baseUrl);
	}
	
	public static void useXpathType1() {
		driver.findElement(By.xpath("//textarea[@title='Search']")).sendKeys("Himanshu");
	}
	
	public static void useXpathType2() {
		driver.findElement(By.xpath("//textarea[@id='APjFqb']")).sendKeys("Himanshu");
	}
	
	public static void useXpathType3() {
		driver.findElement(By.xpath("//a[contains(text(),'Gmail')]")).click();
	}
	
	public static void useXpathType4() {
		driver.findElement(By.xpath("//a[contains(text(),'Gma')]")).click();
	}
	
	public static void useXpathType5() {
		int countOfTextAreaTags = driver.findElements(By.xpath("//textarea")).size();
		System.out.println("total textarea tags are :: " + countOfTextAreaTags);
	}

	public static void useXpathType6() {
		driver.findElement(By.xpath("//textarea[@class='gLFyf']")).sendKeys("Himanshu");
	}
	
	public static void useXpathType7() {
		driver.findElement(By.xpath("//textarea[@name='q']")).sendKeys("Himanshu");
	}
	
	public static void useXpathType8() throws InterruptedException {
		driver.findElement(By.xpath("//textarea[@name='q']")).sendKeys("Himanshu zdfd sdf sdfbsdfb asddgadsgasdgadsgdg");
		Thread.sleep(4000);
		// below is the indexing that we have used here
		driver.findElement(By.xpath("(//input[@value='Google Search'])[2]")).click();
	}
	
}


Note : Indexing is less recommended (this should be used when we have this as a last option).


=========================================================================================

Type9 : Use parent child hierarcy : 

//parentTagName//childTagName[@attibuteName='attributeValue']
//parentTagName[@attibuteName='attributeValue']//childTagName
//parentTagName[@attibuteName='attributeValue']//childTagName[@attibuteName='attributeValue']

//div//a[contains(text(),'MX Player')]
(//div[@id='nav-xshop']//a)[2]
//div[@id='nav-xshop']//a[@data-csa-c-id='y67t0k-bpfeb8-jwn1nz-7dwg6m']


package GuviMavenProjectForEveningBatch.EveningBatchMavenProject;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;

import io.github.bonigarcia.wdm.WebDriverManager;

public class SeleniumLocatorXpath {

	static WebDriver driver;
	
	public static void main(String[] args) throws InterruptedException {
		instantiateBrowserWithBaseUrl("https://www.amazon.in/");
		useXpathType9();
	}
	
	public static void instantiateBrowserWithBaseUrl(String baseUrl) {
		WebDriverManager.chromedriver().setup();
		driver = new ChromeDriver();
		driver.manage().window().maximize();
		driver.get(baseUrl);
	}
	
	public static void useXpathType1() {
		driver.findElement(By.xpath("//textarea[@title='Search']")).sendKeys("Himanshu");
	}
	
	public static void useXpathType2() {
		driver.findElement(By.xpath("//textarea[@id='APjFqb']")).sendKeys("Himanshu");
	}
	
	public static void useXpathType3() {
		driver.findElement(By.xpath("//a[contains(text(),'Gmail')]")).click();
	}
	
	public static void useXpathType4() {
		driver.findElement(By.xpath("//a[contains(text(),'Gma')]")).click();
	}
	
	public static void useXpathType5() {
		int countOfTextAreaTags = driver.findElements(By.xpath("//textarea")).size();
		System.out.println("total textarea tags are :: " + countOfTextAreaTags);
	}

	public static void useXpathType6() {
		driver.findElement(By.xpath("//textarea[@class='gLFyf']")).sendKeys("Himanshu");
	}
	
	public static void useXpathType7() {
		driver.findElement(By.xpath("//textarea[@name='q']")).sendKeys("Himanshu");
	}
	
	public static void useXpathType8() throws InterruptedException {
		driver.findElement(By.xpath("//textarea[@name='q']")).sendKeys("Himanshu zdfd sdf sdfbsdfb asddgadsgasdgadsgdg");
		Thread.sleep(4000);
		// below is the indexing that we have used here
		driver.findElement(By.xpath("(//input[@value='Google Search'])[2]")).click();
	}
	
	public static void useXpathType9() {
		WebElement myElement = driver.findElement(By.xpath("//div//a[contains(text(),'MX Player')]"));
		String textOfmyElement = myElement.getText();
		System.out.println("Element text is :: " + textOfmyElement);
	}
	
}

=========================================================================================

Type 10 : Grand Parent and Child Hierarchy : 

//GrandParent//Parent//Child[@attributeName='attributeValue']
//GrandParent[@attributeName='attributeValue']//Parent//Child
//GrandParent//Parent[@attributeName='attributeValue']//Child



Sample HTML : 

<div color=red> 
<div color=yellow title="mainbox">
	<div class="nav-hh" title="Search"> </div>
	<div> </div>
	<div name="Himanshu"> </div>
	<div id="Sathya">
		<a href="https://www.abcd.com"> </a>
		<tr id="firstOne"> </tr>
		<div>allLearners</div>
		<b></b>
	</div>
</div>
<div> </div>
<table> </table>

Sibling : lies in same line
GrandParent : 2 above in hierarchy
Parent : above in hierarchy
Child : below in hierarchy

Sample XPath  :  div[@title='mainbox']//div[@id='Sathya']//tr[@id='firstOne']

package GuviMavenProjectForEveningBatch.EveningBatchMavenProject;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;

import io.github.bonigarcia.wdm.WebDriverManager;

public class SeleniumLocatorXpath {

	static WebDriver driver;
	
	public static void main(String[] args) throws InterruptedException {
		instantiateBrowserWithBaseUrl("https://www.guvi.in/");
		useXpath10();
	}
	
	public static void instantiateBrowserWithBaseUrl(String baseUrl) {
		WebDriverManager.chromedriver().setup();
		driver = new ChromeDriver();
		driver.manage().window().maximize();
		driver.get(baseUrl);
	}
	
	public static void useXpathType1() {
		driver.findElement(By.xpath("//textarea[@title='Search']")).sendKeys("Himanshu");
	}
	
	public static void useXpathType2() {
		driver.findElement(By.xpath("//textarea[@id='APjFqb']")).sendKeys("Himanshu");
	}
	
	public static void useXpathType3() {
		driver.findElement(By.xpath("//a[contains(text(),'Gmail')]")).click();
	}
	
	public static void useXpathType4() {
		driver.findElement(By.xpath("//a[contains(text(),'Gma')]")).click();
	}
	
	public static void useXpathType5() {
		int countOfTextAreaTags = driver.findElements(By.xpath("//textarea")).size();
		System.out.println("total textarea tags are :: " + countOfTextAreaTags);
	}

	public static void useXpathType6() {
		driver.findElement(By.xpath("//textarea[@class='gLFyf']")).sendKeys("Himanshu");
	}
	
	public static void useXpathType7() {
		driver.findElement(By.xpath("//textarea[@name='q']")).sendKeys("Himanshu");
	}
	
	public static void useXpathType8() throws InterruptedException {
		driver.findElement(By.xpath("//textarea[@name='q']")).sendKeys("Himanshu zdfd sdf sdfbsdfb asddgadsgasdgadsgdg");
		Thread.sleep(4000);
		// below is the indexing that we have used here
		driver.findElement(By.xpath("(//input[@value='Google Search'])[2]")).click();
	}
	
	public static void useXpathType9() {
		WebElement myElement = driver.findElement(By.xpath("//div//a[contains(text(),'MX Player')]"));
		String textOfmyElement = myElement.getText();
		System.out.println("Element text is :: " + textOfmyElement);
	}
	
	public static void useXpath10() {
		driver.findElement(By.xpath("(.//div[@class='navbar py-2 _navbar_v46ph_230']//div//a[contains(text(),'Courses')])[2]")).click();
	}
	
}


==============================================================================================

Type 11 : Use contains for attributeValue (in place of linkText only) :

//tagName[contains(@attibuteName,'attributeValue')]  // you can give full or partial attribute value // This is very useful Xpath 

package GuviMavenProjectForEveningBatch.EveningBatchMavenProject;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;

import io.github.bonigarcia.wdm.WebDriverManager;

public class SeleniumLocatorXpath {

	static WebDriver driver;
	
	public static void main(String[] args) throws InterruptedException {
		instantiateBrowserWithBaseUrl("https://www.facebook.com/");
		useXpath11();
	}
	
	public static void instantiateBrowserWithBaseUrl(String baseUrl) {
		WebDriverManager.chromedriver().setup();
		driver = new ChromeDriver();
		driver.manage().window().maximize();
		driver.get(baseUrl);
	}
	
	public static void useXpathType1() {
		driver.findElement(By.xpath("//textarea[@title='Search']")).sendKeys("Himanshu");
	}
	
	public static void useXpathType2() {
		driver.findElement(By.xpath("//textarea[@id='APjFqb']")).sendKeys("Himanshu");
	}
	
	public static void useXpathType3() {
		driver.findElement(By.xpath("//a[contains(text(),'Gmail')]")).click();
	}
	
	public static void useXpathType4() {
		driver.findElement(By.xpath("//a[contains(text(),'Gma')]")).click();
	}
	
	public static void useXpathType5() {
		int countOfTextAreaTags = driver.findElements(By.xpath("//textarea")).size();
		System.out.println("total textarea tags are :: " + countOfTextAreaTags);
	}

	public static void useXpathType6() {
		driver.findElement(By.xpath("//textarea[@class='gLFyf']")).sendKeys("Himanshu");
	}
	
	public static void useXpathType7() {
		driver.findElement(By.xpath("//textarea[@name='q']")).sendKeys("Himanshu");
	}
	
	public static void useXpathType8() throws InterruptedException {
		driver.findElement(By.xpath("//textarea[@name='q']")).sendKeys("Himanshu zdfd sdf sdfbsdfb asddgadsgasdgadsgdg");
		Thread.sleep(4000);
		// below is the indexing that we have used here
		driver.findElement(By.xpath("(//input[@value='Google Search'])[2]")).click();
	}
	
	public static void useXpathType9() {
		WebElement myElement = driver.findElement(By.xpath("//div//a[contains(text(),'MX Player')]"));
		String textOfmyElement = myElement.getText();
		System.out.println("Element text is :: " + textOfmyElement);
	}
	
	public static void useXpath10() {
		driver.findElement(By.xpath("(.//div[@class='navbar py-2 _navbar_v46ph_230']//div//a[contains(text(),'Courses')])[2]")).click();
	}
	
	public static void useXpath11() {
		driver.findElement(By.xpath("//input[contains(@aria-label,'Email address')]")).sendKeys("Himanshu");
	}
	
}


==============================================================================================

Type 12 : Use following Sibling 

XpathOfAnElement/following-sibling::tagNameOfSibling

Sample HTML : 

<div> <div>
<div title='Search'> <div>
<div> <div>
<div> <div> 

Sample Xpath : 
I need to write the Xpath of 3rd div in above html code, tell me the Xpath : 

//div[@title='Search']

Note : we cant use single slash or double slash to reach to the third div directly, because these slashes are used to find child tags.

write the Xpath of above element / following-sibling :: tagNameOfElementThatYouAreTryingToIdentify


package GuviMavenProjectForEveningBatch.EveningBatchMavenProject;

import java.util.concurrent.TimeUnit;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;

import io.github.bonigarcia.wdm.WebDriverManager;

public class SeleniumLocatorXpath {

	static WebDriver driver;
	
	public static void main(String[] args) throws InterruptedException {
		instantiateBrowserWithBaseUrl("https://www.myntra.com/");
		useXpath12();
	}
	
	public static void instantiateBrowserWithBaseUrl(String baseUrl) {
		WebDriverManager.chromedriver().setup();
		driver = new ChromeDriver();
		driver.manage().window().maximize();
		driver.get(baseUrl);
		driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
	}
	
	public static void useXpathType1() {
		driver.findElement(By.xpath("//textarea[@title='Search']")).sendKeys("Himanshu");
	}
	
	public static void useXpathType2() {
		driver.findElement(By.xpath("//textarea[@id='APjFqb']")).sendKeys("Himanshu");
	}
	
	public static void useXpathType3() {
		driver.findElement(By.xpath("//a[contains(text(),'Gmail')]")).click();
	}
	
	public static void useXpathType4() {
		driver.findElement(By.xpath("//a[contains(text(),'Gma')]")).click();
	}
	
	public static void useXpathType5() {
		int countOfTextAreaTags = driver.findElements(By.xpath("//textarea")).size();
		System.out.println("total textarea tags are :: " + countOfTextAreaTags);
	}

	public static void useXpathType6() {
		driver.findElement(By.xpath("//textarea[@class='gLFyf']")).sendKeys("Himanshu");
	}
	
	public static void useXpathType7() {
		driver.findElement(By.xpath("//textarea[@name='q']")).sendKeys("Himanshu");
	}
	
	public static void useXpathType8() throws InterruptedException {
		driver.findElement(By.xpath("//textarea[@name='q']")).sendKeys("Himanshu zdfd sdf sdfbsdfb asddgadsgasdgadsgdg");
		Thread.sleep(4000);
		// below is the indexing that we have used here
		driver.findElement(By.xpath("(//input[@value='Google Search'])[2]")).click();
	}
	
	public static void useXpathType9() {
		WebElement myElement = driver.findElement(By.xpath("//div//a[contains(text(),'MX Player')]"));
		String textOfmyElement = myElement.getText();
		System.out.println("Element text is :: " + textOfmyElement);
	}
	
	public static void useXpath10() {
		driver.findElement(By.xpath("(.//div[@class='navbar py-2 _navbar_v46ph_230']//div//a[contains(text(),'Courses')])[2]")).click();
	}
	
	public static void useXpath11() {
		driver.findElement(By.xpath("//input[contains(@aria-label,'Email address')]")).sendKeys("Himanshu");
	}
	
	public static void useXpath12() {
		WebElement myElement = driver.findElement(By.xpath("//div[@class='desktop-actions']/following-sibling::div"));
		String valueOfDataReactId = myElement.getAttribute("data-reactid");
		System.out.println("value of Data React ID is :: " + valueOfDataReactId);
	}
	
}


==============================================================================================

Vert Important Interview Question : 

What is StaleElementReferenceException and how to handle it ?

2 ways to handle : 

Use ExplicitWait
Use ImplicitWait

We will cover this topic when we will learn this in a dedicated session on ImplicitWait, ExplicitWait, FluenWait, JavaWait (Thread.sleep).

==============================================================================================

Type 12 : Use preceding Sibling 

XpathOfAnElement/preceding-sibling::tagNameOfSibling


package GuviMavenProjectForEveningBatch.EveningBatchMavenProject;

import java.util.concurrent.TimeUnit;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;

import io.github.bonigarcia.wdm.WebDriverManager;

public class SeleniumLocatorXpath {

	static WebDriver driver;
	
	public static void main(String[] args) throws InterruptedException {
		instantiateBrowserWithBaseUrl("https://www.myntra.com/");
		useXpath13();
	}
	
	public static void instantiateBrowserWithBaseUrl(String baseUrl) {
		WebDriverManager.chromedriver().setup();
		driver = new ChromeDriver();
		driver.manage().window().maximize();
		driver.get(baseUrl);
		driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
	}
	
	public static void useXpathType1() {
		driver.findElement(By.xpath("//textarea[@title='Search']")).sendKeys("Himanshu");
	}
	
	public static void useXpathType2() {
		driver.findElement(By.xpath("//textarea[@id='APjFqb']")).sendKeys("Himanshu");
	}
	
	public static void useXpathType3() {
		driver.findElement(By.xpath("//a[contains(text(),'Gmail')]")).click();
	}
	
	public static void useXpathType4() {
		driver.findElement(By.xpath("//a[contains(text(),'Gma')]")).click();
	}
	
	public static void useXpathType5() {
		int countOfTextAreaTags = driver.findElements(By.xpath("//textarea")).size();
		System.out.println("total textarea tags are :: " + countOfTextAreaTags);
	}

	public static void useXpathType6() {
		driver.findElement(By.xpath("//textarea[@class='gLFyf']")).sendKeys("Himanshu");
	}
	
	public static void useXpathType7() {
		driver.findElement(By.xpath("//textarea[@name='q']")).sendKeys("Himanshu");
	}
	
	public static void useXpathType8() throws InterruptedException {
		driver.findElement(By.xpath("//textarea[@name='q']")).sendKeys("Himanshu zdfd sdf sdfbsdfb asddgadsgasdgadsgdg");
		Thread.sleep(4000);
		// below is the indexing that we have used here
		driver.findElement(By.xpath("(//input[@value='Google Search'])[2]")).click();
	}
	
	public static void useXpathType9() {
		WebElement myElement = driver.findElement(By.xpath("//div//a[contains(text(),'MX Player')]"));
		String textOfmyElement = myElement.getText();
		System.out.println("Element text is :: " + textOfmyElement);
	}
	
	public static void useXpath10() {
		driver.findElement(By.xpath("(.//div[@class='navbar py-2 _navbar_v46ph_230']//div//a[contains(text(),'Courses')])[2]")).click();
	}
	
	public static void useXpath11() {
		driver.findElement(By.xpath("//input[contains(@aria-label,'Email address')]")).sendKeys("Himanshu");
	}
	
	public static void useXpath12() {
		WebElement myElement = driver.findElement(By.xpath("//div[@class='desktop-actions']/following-sibling::div"));
		String valueOfDataReactId = myElement.getAttribute("data-reactid");
		System.out.println("value of Data React ID is :: " + valueOfDataReactId);
	}
	
	public static void useXpath13() {
		driver.findElement(By.xpath("//a[@class='desktop-cart']/preceding-sibling::a//span[1]")).click();
	}
}


==============================================================================================

Xpath type 13 :
Parent-child hierarchy + indexing

Xpath type 14 :
GrandParent-Parent-Child Hierarchy + indexing

Xpath type 15 : 
following-sibling + indexing

Xpath type 16 : 
preceding-sibling + indexing

Xpath type 17 :
following-sibling + parent child relation etc.

Xpath type 18 : 
preceding-sibling + parent child relation etc.

Xpath type 19 : 
Any combination of above 18 Xpath altogether.

Xpath type 20 :
Go to Parent from Child.
Child-Parent Hierarchy (Opposite of Parent-Child Hierarchy) 

XpathOfChild/parent::tagNameOfParent

//a[contains(text(),'Gmail')]/parent::div

Xpath type 21 : 
Use Xpath 20 + indexing

Xpath type 22 : (Very rarely used)
//div[@name='raju' and class='abcd']

Xpath type 23 : (Very Very rarely used) 
//div[@name='raju' or class='abcd']

==============================================================================================

Selenium 3 and Selenium 4 difference :

Selenium 1 and Selenium 2 : 
We need to download the chromedriver or other driver manually and then we need to give the path of driver manually in our script.
Like : System.setProperty("webdriver.chrome.driver","<pathOfOurChromeDriver>");

Selenium 3 :
We need to have WebDriverManager if we want to manage the browsers (drivers).
If you have WebDriverManager, WebDriverManager will take care of your browsers.

Selenium 4.6 and above versions:
We don't even need WebDriverManager, we just need to have selenium latest version (4) and we are done.
It will automatically manage your browser drivers.

Note : In Selenium 3 and Selenium 4, if you still have any issue with the versioning, we just need to replace the driver in the .cache folder.

===============================================================================================

Whenever we are writing the XPath,

Dont use class attribute when it has the value with spaces.
(if you want to use the class name with value, use it partially like below example ) : 

<div class='nav linkbar search'  color="red"  font-size=8px> ShoppingList </div>     => this class is having space so dont use it with complete value.

How to use this : 
driver.findElement(By.xpath("//div[contains(@class,'nav')]"));
or 
driver.findElement(By.xpath("//div[contains(@class,'linkbar')]"));
or 
driver.findElement(By.xpath("//div[contains(@class,'search')]"));

Dont use like below one : 
driver.findElement(By.xpath("//div[contains(@class,'nav linkbar search')]"));

================================================================================================

Never ever use any style attibute, color, font-size when you are creating the xpath.

You will always be rejected in the interview if you use any of such values in creating selenium locators.

================================================================================================

Last Locator is CssSelector (I never use CssSelector, it has so many limitations) :

If an element is having className then we can use it like : 

tagName.classValue

If you want to use the className value in contains then give the partial name after dot (.) :

tagName.partialClassValue

How to use Parent Child hierarchy in CssSelector : 

Parent>Child.classValue

Example : 
div>div.spchc

How to CssSelector using Id value :

Use Hash (#) and then IDValue :
Example : #spchc

==================================================================================================

What is Actions Class in Selenium ?
How to Use Actions Class in Selenium ??

Actions class is used in Selenium to perform MOUSE ACTIONS.

==================================================================================================

MouseHover
Click
DoubleClick
RightClick
DragAndDrop

==================================================================================================

Actioon Class :

Simply make the object of actions class and call the respected method to perform the action (mouse action).

Actions myAction = new Actions();

==================================================================================================

Cick an Element (Using Actions Class) : 

package createqadoc.CreateQADoc;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Actions;

import io.github.bonigarcia.wdm.WebDriverManager;

public class ActionsClassAndItsMethods {
	
	static WebDriver driver;

	public static void main(String[] args) {
		instantiateBrowser("https://www.guvi.in/");
		methodForDoingClickUsingActionsClass();
	}
	
	public static void instantiateBrowser(String baseURL) {
		driver = new ChromeDriver();
		driver.get(baseURL);
	}
	
	public static void methodForDoingClickUsingActionsClass() {
		WebElement myElement = driver.findElement(By.xpath("(.//a[contains(text(),'Courses')])[2]"));
		Actions actions = new Actions(driver);
		actions.click(myElement).perform(); 
	}

}


============================================================================================

MouseHoverToElement an Element (Using Actions Class - MoveToElement method) :

package createqadoc.CreateQADoc;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Actions;

import io.github.bonigarcia.wdm.WebDriverManager;

public class ActionsClassAndItsMethods {
	
	static WebDriver driver;

	public static void main(String[] args) {
		instantiateBrowser("https://www.amazon.in/");
		methodForDoingMouseHoverUsingActionsClass();
	}
	
	public static void instantiateBrowser(String baseURL) {
		driver = new ChromeDriver();
		driver.get(baseURL);
		driver.manage().window().maximize();
	}
	
	public static void methodForDoingClickUsingActionsClass() {
		WebElement myElement = driver.findElement(By.xpath("(.//a[contains(text(),'Courses')])[2]"));
		Actions actions = new Actions(driver);
		actions.click(myElement).perform(); 
	}
	
	public static void methodForDoingMouseHoverUsingActionsClass() {
		WebElement myElement = driver.findElement(By.xpath(".//span[contains(text(),'Account & Lists')]//span"));
		Actions actions = new Actions(driver);
		actions.moveToElement(myElement).perform();
		
		
	}

}


=========================================================================================

DragAndDrop (using Actions class) :


package createqadoc.CreateQADoc;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Actions;

public class ActionsClassAndItsMethods {
	
	static WebDriver driver;

	public static void main(String[] args) {
		instantiateBrowser("https://www.w3schools.com/html/html5_draganddrop.asp");
		methodForDoingDragAndDropUsingActionsClass();
	}
	
	public static void instantiateBrowser(String baseURL) {
		driver = new ChromeDriver();
		driver.get(baseURL);
		driver.manage().window().maximize();
	}
	
	public static void methodForDoingClickUsingActionsClass() {
		WebElement myElement = driver.findElement(By.xpath("(.//a[contains(text(),'Courses')])[2]"));
		Actions actions = new Actions(driver);
		actions.click(myElement).perform(); 
	}
	
	public static void methodForDoingMouseHoverUsingActionsClass() {
		WebElement myElement = driver.findElement(By.xpath(".//span[contains(text(),'Account & Lists')]//span"));
		Actions actions = new Actions(driver);
		actions.moveToElement(myElement).perform();
		
		
	}

	public static void methodForDoingDragAndDropUsingActionsClass() {
		waitForFixTime(2000);
		WebElement source = driver.findElement(By.xpath("//img[@id='drag1' and @alt='W3Schools']"));
		WebElement target = driver.findElement(By.xpath("//img[@id='drag1' and @alt='W3Schools']/parent::div/following-sibling::div[1]"));
		
		Actions actions = new Actions(driver);
		actions.dragAndDrop(source, target).perform();
	}
	
	public static void waitForFixTime(int TimeInMilliSeconds) {
		try {
			Thread.sleep(TimeInMilliSeconds);
		} catch (InterruptedException e) {
		}
	}
	
}

==========================================================================================================

DoubleClick an Element (Using Actions Class - DoubleClick method) :
 
Actions actions = new Actions(driver);
actions.doubleClick(ourWebElement).perform();

===========================================================================================================

Very Important Question For the Interview (We never use this in practicle IT world) : 

What is contextClick in Actions Class (in selenium) ??

Answer : Context Click is used to perform right click on an element.

Actions actions = new Actions(driver);
actions.contextClick(ourWebElement).perform();

===========================================================================================================

How to use Keyboard Keys in Actions Class : 

CTRL + A 
CTRL + A

How we do CTRL + A manully :
1) We need to press CTRL + A
2) We need to release both the keys

First of all, we want to press and release CONTROL only : 

Actions actions = new Actions(driver);
actions.KeyDown(Keys.CONTROL);
actions.KeyUp(Keys.CONTORL);

Now, if we want to perform CTRL + A, steps are simple : 

actions.KeyDown(Keys.CONTROL).sendKeys("A").KeyUp(Keys.CONTROL).perform();

==========================================================================================================

Last 2 methods of Actions Class but never used but can be asked in the interview : 

1) actions.clickAndHold(ourWebElement).perform();
2) actions.release.perform();

==========================================================================================================

How to enter text in a input box using actions class : 

actions.sendKeys(ourWebElement, textWeNeedToEnter).perform();

Example : 
actions.sendKeys(ourWebElement, "My Age is 30").perform();

==========================================================================================================

How to Handle checkbox in selenium :

package createqadoc.CreateQADoc;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;

public class HandleCheckBoxesInSelenium {

	static WebDriver driver;

	public static void main(String[] args) {
		methodToHandleCheckBox();
	}

	public static void methodToHandleCheckBox() {
		instantiateDriver();
		driver.get("https://www.ironspider.ca/forms/checkradio.htm");
		waitForTime(2000);
		driver.findElement(By.xpath(".//input[@value='red']")).click();
		driver.findElement(By.xpath(".//input[@value='yellow']")).click();
	}

	public static void instantiateDriver() {
		driver = new ChromeDriver();
	}

	public static void waitForTime(int time) {
		try {
			Thread.sleep(time);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}


=====================================================================================================

How to select and deselect checkboxes in selenium : 

package createqadoc.CreateQADoc;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;

public class HandleCheckBoxesInSelenium {

	static WebDriver driver;

	public static void main(String[] args) {
		methodToHandleCheckBox();
	}

	public static void methodToHandleCheckBox() {
		instantiateDriver();
		driver.get("https://www.ironspider.ca/forms/checkradio.htm");
		waitForTime(2000);
		// Selecting All the checkboxes
		driver.findElement(By.xpath(".//input[@value='red']")).click();
		driver.findElement(By.xpath(".//input[@value='yellow']")).click();
		driver.findElement(By.xpath(".//input[@value='blue']")).click();
		driver.findElement(By.xpath(".//input[@value='green']")).click();
		driver.findElement(By.xpath(".//input[@value='orange']")).click();
		driver.findElement(By.xpath(".//input[@value='purple']")).click();
		// Deselecting all the checkboxes
		driver.findElement(By.xpath(".//input[@value='red']")).click();
		driver.findElement(By.xpath(".//input[@value='yellow']")).click();
		driver.findElement(By.xpath(".//input[@value='blue']")).click();
		driver.findElement(By.xpath(".//input[@value='green']")).click();
		driver.findElement(By.xpath(".//input[@value='orange']")).click();
		driver.findElement(By.xpath(".//input[@value='purple']")).click();
		
	}

	public static void instantiateDriver() {
		driver = new ChromeDriver();
	}

	public static void waitForTime(int time) {
		try {
			Thread.sleep(time);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}


======================================================================================================


How to handle Radio Button in selenium : 

package createqadoc.CreateQADoc;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;

public class HandleRadioButtonInSelenium {

	static WebDriver driver;
	
	public static void main(String[] args) {
		methodToHandleRadioButton();
	}
	
	public static void methodToHandleRadioButton() {
		WebDriver driver = new ChromeDriver();
		driver.get("https://designsystem.digital.gov/components/radio-buttons/");
		waitForTime(2000);
		driver.findElement(By.xpath("//label[@for='historical-douglass']")).click();
		waitForTime(2000);
		driver.findElement(By.xpath(".//label[@for='historical-douglass-2']")).click();
	}
	
	public static void waitForTime(int time) {
		try {
			Thread.sleep(time);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}


}


============================================================================================================

package createqadoc.CreateQADoc;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;

public class HandleRadioButtonInSelenium {

	static WebDriver driver;
	
	public static void main(String[] args) {
		methodToHandleRadioButton();
	}
	
	public static void methodToHandleRadioButton() {
		WebDriver driver = new ChromeDriver();
		driver.get("https://designsystem.digital.gov/components/radio-buttons/");
		waitForTime(2000);
		driver.findElement(By.xpath("//label[@for='historical-douglass']")).click();
		waitForTime(2000);
		WebElement myElement =  driver.findElement(By.xpath(".//label[@for='historical-douglass-2']"));
		myElement.click();
		
	}
	
	public static void waitForTime(int time) {
		try {
			Thread.sleep(time);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}

	// I never recommend to use isSelected(), isEnabled(), isDisplayed() methods of selenium.
	// I never recommend to use selectBy (3 methods) of selenium (pathetic methods) to handle drop-downs.

}

Note : Try avoid using methods like : isSelected(), isEnabled(), isDisplayed()

================================================================================================

Customized Xpath: 

This is very useful to handle Checkboxes, RadioButtons, Drop-Downs, Dynamic Elements on Page, Calenders.

Customized Xpath means create a common Xpath for couple of elements and pass/check the value at runTime.

driver.findElement(By.xpath(".//input[@value='red']")).click();
driver.findElement(By.xpath(".//input[@value='yellow']")).click();
driver.findElement(By.xpath(".//input[@value='blue']")).click();
driver.findElement(By.xpath(".//input[@value='green']")).click();
driver.findElement(By.xpath(".//input[@value='orange']")).click();
driver.findElement(By.xpath(".//input[@value='purple']")).click();




Customized Xpath for all the above elements : 

driver.findElement(By.xpath(".//input[@value='          purple                     ']"));

driver.findElement(By.xpath(".//input[@value='+anyRandomString+']")); // This is the exact syntax



package createqadoc.CreateQADoc;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;

public class HandleCheckBoxesInSelenium {

	static WebDriver driver;

	public static void main(String[] args) {
		methodToHandleCheckBoxWithCustomizedXpath();
	}

	public static void methodToHandleCheckBox() {
		instantiateDriver();
		driver.get("https://www.ironspider.ca/forms/checkradio.htm");
		waitForTime(2000);
		// Selecting All the checkboxes
		driver.findElement(By.xpath(".//input[@value='red']")).click();
		driver.findElement(By.xpath(".//input[@value='yellow']")).click();
		driver.findElement(By.xpath(".//input[@value='blue']")).click();
		driver.findElement(By.xpath(".//input[@value='green']")).click();
		driver.findElement(By.xpath(".//input[@value='orange']")).click();
		driver.findElement(By.xpath(".//input[@value='purple']")).click();
		// Deselecting all the checkboxes
		driver.findElement(By.xpath(".//input[@value='red']")).click();
		driver.findElement(By.xpath(".//input[@value='yellow']")).click();
		driver.findElement(By.xpath(".//input[@value='blue']")).click();
		driver.findElement(By.xpath(".//input[@value='green']")).click();
		driver.findElement(By.xpath(".//input[@value='orange']")).click();
		driver.findElement(By.xpath(".//input[@value='purple']")).click();
		
	}
	
	public static void methodToHandleCheckBoxWithCustomizedXpath() {
		instantiateDriver();
		driver.get("https://www.ironspider.ca/forms/checkradio.htm");
		waitForTime(2000);
		clickCheckBoxesByColor("red");
		clickCheckBoxesByColor("purple");
		clickCheckBoxesByColor("green");
	}
	
	public static void clickCheckBoxesByColor(String color) {
		driver.findElement(By.xpath(".//input[@value='"+color+"']")).click();
	}
	
	public static void instantiateDriver() {
		driver = new ChromeDriver();
	}

	public static void waitForTime(int time) {
		try {
			Thread.sleep(time);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}

}


========================================================================================================

How to handle Drop-downs in Selenium : 

How to select using its index : 

package createqadoc.CreateQADoc;

import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;

public class HandleListOrDropDownInSelenium {

	static WebDriver driver;
	
	public static void main(String[] args) {
		handleDropDownInSelenium();
	}
	
	public static void handleDropDownInSelenium() {
	
		driver = new ChromeDriver();
		driver.get("https://www.globalsqa.com/demo-site/select-dropdown-menu/");
		waitForTime(2000);
		driver.findElement(By.xpath(".//option[contains(text(),'Afghanistan')]")).click();
		waitForTime(2000);
		List<WebElement> myElements = driver.findElements(By.xpath(".//select//option"));
		waitForTime(2000);
		myElements.get(6).click();
		
	}
	
	public static void waitForTime(int time) {
		try {
			Thread.sleep(time);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}

}


======================================================================================================

How to select using its value : 

package createqadoc.CreateQADoc;

import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;

public class HandleListOrDropDownInSelenium {

	static WebDriver driver;
	
	public static void main(String[] args) {
		handleDropDownInSelenium();
	}
	
	public static void handleDropDownInSelenium() {
	
		driver = new ChromeDriver();
		driver.get("https://www.globalsqa.com/demo-site/select-dropdown-menu/");
		waitForTime(2000);
		driver.findElement(By.xpath(".//option[contains(text(),'Afghanistan')]")).click();
		waitForTime(2000);
		List<WebElement> myElements = driver.findElements(By.xpath(".//select//option"));
		waitForTime(2000);
		
		for(int index=0;index<myElements.size();index++) {
			if(myElements.get(index).getText().equalsIgnoreCase("India")) {
				myElements.get(index).click();
				break;
			}
		}
		
	}
	
	public static void waitForTime(int time) {
		try {
			Thread.sleep(time);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}

}


====================================================================================================

package createqadoc.CreateQADoc;

import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;

public class HandleListOrDropDownInSelenium {

	static WebDriver driver;
	
	public static void main(String[] args) {
		handleDropDownInSelenium();
	}
	
	public static void handleDropDownInSelenium() {
	
		driver = new ChromeDriver();
		driver.get("https://www.globalsqa.com/demo-site/select-dropdown-menu/");
		waitForTime(2000);
		driver.findElement(By.xpath("//select")).click();
		waitForTime(2000);
		List<WebElement> myElements = driver.findElements(By.xpath(".//select//option"));
		waitForTime(2000);
		
		for(int index=0;index<myElements.size();index++) {
			if(myElements.get(index).getText().equalsIgnoreCase("India")) {
				myElements.get(index).click();
				break;
			}
		}
		
	}
	
	public static void waitForTime(int time) {
		try {
			Thread.sleep(time);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}

}


==============================================================================================================

How to Handle Calender / DatePicker in Selenium : 

package createqadoc.CreateQADoc;

import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;

public class HandleCalanderInSelenium {
	
	static WebDriver driver;

	public static void main(String[] args) {
		methodToHandleCalendarInSelenium();
	}

	public static void methodToHandleCalendarInSelenium() {
		
		driver = new ChromeDriver();
		driver.get("https://www.globalsqa.com/demo-site/datepicker/");
		driver.switchTo().frame(driver.findElement(By.xpath(".//iframe[contains(@data-src,'te/practice/datepicker/default.html')]")));
		waitForTime(4000);
		driver.findElement(By.id("datepicker")).click();
		waitForTime(2000);
		selectDate("30");
	}
	
	public static void selectDate(String date) {
		List<WebElement> dates = 	driver.findElements(By.xpath(".//a[@class='ui-state-default']"));
		for(int index=0;index<dates.size();index++) {
			if(dates.get(index).getText().equalsIgnoreCase(date)) {
				dates.get(index).click();
			}
		}
	}
	
	public static void waitForTime(int time) {
		try {
			Thread.sleep(time);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}
	
}


================================================================================================================

Handle Date, Month and Year in Selenium : 

We need to select -> Year
We need to select -> Month
We need to select -> Date

1) Open URL 
2) Click Date Picker.
3) Click left arrow Till we get the Month and Year Combination.
4) Select Date

package createqadoc.CreateQADoc;

import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;

public class HandleCompleteCalendar {
	
	static WebDriver driver;
	
	public static void main(String[] args) {
		selectYearMonthDateInCalendar();
	}
	
	public static void selectYearMonthDateInCalendar()  {
		
		driver = new ChromeDriver();
		// open url
		driver.get("https://www.globalsqa.com/demo-site/datepicker/");
		waitForFixTime(2000);
		// Click second tab
		driver.findElement(By.xpath(".//li[contains(text(),'DropDown DatePicker')]")).click();
		waitForFixTime(2000);
		// switch to iframe
		driver.switchTo().frame(driver.findElement(By.xpath(".//iframe[contains(@data-src,'dropdown-month-year.html')]")));
		waitForFixTime(2000);
		// select date-picker
		driver.findElement(By.xpath(".//input[@id='datepicker']")).click();
		// select Month
		selectMonth("Apr");
		// select Year
		selectYear("2022");
		// select Date
		selectDate("24");
	}
	
	public static void selectMonth(String month) {
		waitForFixTime(2000);
		// click Month drop down
		driver.findElement(By.xpath(".//select[@data-handler='selectMonth']")).click();
		List<WebElement> monthList =  driver.findElements(By.xpath(".//select[@data-handler='selectMonth']//option"));
		// select month passed in the method
		for(int index=0;index<monthList.size();index++) {
			if(monthList.get(index).getText().equalsIgnoreCase(month)) {
				monthList.get(index).click();
				break;
			}
		}
	}
	
	public static void selectYear(String year) {
		// click year drop down
		waitForFixTime(2000);
		driver.findElement(By.xpath(".//select[@data-handler='selectYear']")).click();
		List<WebElement> yearList = driver.findElements(By.xpath(".//select[@data-handler='selectYear']//option"));
		// select year passed in the method
		for(int index=0;index<yearList.size();index++) {
			if(yearList.get(index).getText().equalsIgnoreCase(year)) {
				yearList.get(index).click();
				break;
			}
		}
	}
	
	public static void selectDate(String date) {
		waitForFixTime(2000);
		List<WebElement> dateList = driver.findElements(By.xpath("//td[@data-handler='selectDay']//a"));
		// select date passed in the method
		for(int index=0;index<dateList.size();index++) {
			if(dateList.get(index).getText().equalsIgnoreCase(date)) {
				dateList.get(index).click();
				break;
			}
		}
	}
	
	public static void waitForFixTime(int time) {
		try {
			Thread.sleep(time);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}

}


=============================================================================================================

How to handle Alerts in Selenium : 

driver.switchTo().alert().accept();
driver.switchTo().alert().dismiss();

package createqadoc.CreateQADoc;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;

public class HandleAlertInSelenium {

	public static void main(String[] args) {
		handleAlert();
	}
	
	public static void handleAlert() {
		WebDriver driver = new ChromeDriver();
		driver.get("https://demo.guru99.com/test/delete_customer.php");
		driver.manage().window().maximize();
		driver.findElement(By.xpath(".//input[@name='cusid']")).sendKeys("20");
		waitForFixTime(4000);
		driver.findElement(By.xpath(".//input[@type='submit']")).click();
		waitForFixTime(4000);
		driver.switchTo().alert().accept();
		waitForFixTime(4000);
	}
	
	public static void waitForFixTime(int time) {
		try {
			Thread.sleep(time);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}

}

===============================================================================================

	package createqadoc.CreateQADoc;
	
	import org.openqa.selenium.By;
	import org.openqa.selenium.WebDriver;
	import org.openqa.selenium.chrome.ChromeDriver;
	
	public class HandleAlertInSelenium {
	
		public static void main(String[] args) {
			handleAlert();
		}
		
		public static void handleAlert() {
			WebDriver driver = new ChromeDriver();
			driver.get("https://demo.guru99.com/test/delete_customer.php");
			driver.manage().window().maximize();
			driver.findElement(By.xpath(".//input[@name='cusid']")).sendKeys("20");
			waitForFixTime(4000);
			driver.findElement(By.xpath(".//input[@type='submit']")).click();
			waitForFixTime(4000);
			driver.switchTo().alert().accept();
			waitForFixTime(4000);
			driver.switchTo().alert().accept();
		}
		
		public static void waitForFixTime(int time) {
			try {
				Thread.sleep(time);
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
		}
	
	}



====================================================================================================

	package createqadoc.CreateQADoc;
	
	import org.openqa.selenium.By;
	import org.openqa.selenium.WebDriver;
	import org.openqa.selenium.chrome.ChromeDriver;
	
	public class HandleAlertInSelenium {
	
		public static void main(String[] args) {
			handleAlert();
		}
		
		public static void handleAlert() {
			WebDriver driver = new ChromeDriver();
			driver.get("https://demo.guru99.com/test/delete_customer.php");
			driver.manage().window().maximize();
			driver.findElement(By.xpath(".//input[@name='cusid']")).sendKeys("20");
			waitForFixTime(4000);
			driver.findElement(By.xpath(".//input[@type='submit']")).click();
			waitForFixTime(4000);
			driver.switchTo().alert().dismiss();
			waitForFixTime(4000);
		}
		
		public static void waitForFixTime(int time) {
			try {
				Thread.sleep(time);
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
		}
	
	}


===================================================================================================================

Handle frames in selenium : 

Handle frame with Indexing
Handle frame with WebElement (iframe locator)
Handle frame with name/id


Handle frame with name : 

package createqadoc.CreateQADoc;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;

public class HandleFramesInSelenium {

	public static void main(String[] args) {
		handleFrames();
	}
	
	public static void handleFrames() {
		WebDriver driver = new ChromeDriver();
		driver.get("https://www.globalsqa.com/demo-site/frames-and-windows/#iFrame");
		driver.manage().window().maximize();
		waitForFixTime(2000);
		driver.switchTo().frame("globalSqa");
		waitForFixTime(2000);
		driver.findElement(By.xpath(".//img[@alt='Selenium Online Training']")).click();
		
		
	}
	
	public static void waitForFixTime(int time) {
		try {
			Thread.sleep(time);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}

}


==============================================================================================================

Handle frame with WebElement

package createqadoc.CreateQADoc;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;

public class HandleFramesInSelenium {

	public static void main(String[] args) {
		handleFrames();
	}
	
	public static void handleFrames() {
		WebDriver driver = new ChromeDriver();
		driver.get("https://www.globalsqa.com/demo-site/frames-and-windows/#iFrame");
		driver.manage().window().maximize();
		waitForFixTime(2000);
		driver.switchTo().frame(driver.findElement(By.xpath(".//iframe[@name='globalSqa']")));
		waitForFixTime(2000);
		driver.findElement(By.xpath(".//img[@alt='Selenium Online Training']")).click();
		
		
	}
	
	public static void waitForFixTime(int time) {
		try {
			Thread.sleep(time);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}

}


=========================================================================================================

Store it into some WebElement and then pass it (its more or like same as above) :

package createqadoc.CreateQADoc;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;

public class HandleFramesInSelenium {

	public static void main(String[] args) {
		handleFrames();
	}
	
	public static void handleFrames() {
		WebDriver driver = new ChromeDriver();
		driver.get("https://www.globalsqa.com/demo-site/frames-and-windows/#iFrame");
		driver.manage().window().maximize();
		waitForFixTime(2000);
		WebElement myIframeElement = driver.findElement(By.xpath(".//iframe[@name='globalSqa']"));
		driver.switchTo().frame(myIframeElement);
		waitForFixTime(2000);
		driver.findElement(By.xpath(".//img[@alt='Selenium Online Training']")).click();
		
		
	}
	
	public static void waitForFixTime(int time) {
		try {
			Thread.sleep(time);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}

}


=======================================================================================================

Handle frame with Index : 

In frame index, indexing starts from zero.

when you need to switch to frame 1 then use : 
driver.switchTo().frame(0);

when you need to switch to frame 2 then use : 
driver.switchTo().frame(1);

========================================================================================================

Important Interview Question : 

Question 1 : 

nested frames : 

Frame2 is inside frame1 then, can I directly switch to frame2.

Answer is NO.

driver.switchTo.frame(0);
driver.switchTo.frame(1);
driver.switchTo.frame(2);
driver.findElement(By.xpath("XpathOfElementExistInIframe3")).click();

VERY VERY VERY IMPORTANT QUESTION : 

How to move from 3rd nested frame to the parent window (Parent HTML) directly ?????

driver.switchTo.defaultContent();


Q3 : If I have switched to iframe and I want to perform an action in main HTML, Can i do it directly ?

Answer : No, you will first have to switch to the main html page, with defaultContent() method.

Example : 

package createqadoc.CreateQADoc;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;

public class HandleFramesInSelenium {

	public static void main(String[] args) {
		handleFrames();
	}
	
	public static void handleFrames() {
		WebDriver driver = new ChromeDriver();
		driver.get("https://www.globalsqa.com/demo-site/frames-and-windows/#iFrame");
		driver.manage().window().maximize();
		waitForFixTime(2000);
		WebElement myIframeElement = driver.findElement(By.xpath(".//iframe[@name='globalSqa']"));
		driver.switchTo().frame(myIframeElement);
		waitForFixTime(2000);
		driver.findElement(By.xpath(".//img[@alt='Selenium Online Training']")).click();
		waitForFixTime(4000);
		driver.switchTo().defaultContent();
		waitForFixTime(4000);
		driver.findElement(By.xpath(".//li[contains(text(),'Open New Window')]")).click();
		
	}
	
	public static void waitForFixTime(int time) {
		try {
			Thread.sleep(time);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}

}


=========================================================================================================

Topics till today that we need to cover : 

- Notification Handling in Selenium 
- Select Single and Multiple Files 

=========================================================================================================
=========================================================================================================

Task1 : 
Take any website and handle alert by accepting it.
Take any website and handle alert by rejecting it.
Take any website and handle alert by first send some value in the alertBox and then accept it.

Task2: 
Take any website having nested frames and perform any action on second frame.
Then switch your script to main page and perform any action on main html page.

=========================================================================================================
=========================================================================================================

I am giving you 20 minutes to work on these tasks, if you are able to complete it means 
you are champ of handling frames and alerts.

I'm giving you 5 more minutes.
=========================================================================================================
=========================================================================================================

- Waits in Java/Selenium.
- Thread.sleep
- Implicit Wait
- Explicit Wait
- Fluent Wait

Waits in Selenium : 

What are waits ?
Wait means wait for something like : Wait for the element to display, wait for some specific time without any condition etc.

There are 3 waits in selenium : 

1) Implicit Wait : 
- Implicit wait works on the WebDriver level.
- It never works on some specific WebElement.
- When we are giving 30 seconds in implicit wait then it will wait for 30 seconds for all the WebElement that are associated to 
that particular driver (WebDriver).

package createqadoc.CreateQADoc;

import java.util.concurrent.TimeUnit;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;

import io.github.bonigarcia.wdm.WebDriverManager;

public class UseOfImplicitInSelenium {

	public static void main(String[] args) {
		methodHavingCodeForImplicitWait();
	}
	
	public static void methodHavingNoImplicitWait() {
		WebDriverManager.chromedriver().setup();
		WebDriver driver = new ChromeDriver();
		driver.get("https://www.google.com");
		driver.manage().window().maximize();
		driver.findElement(By.xpath("abcd"));
		// After how much time we are getting this exception "NoSuchElementException".
		// It is throwing the exception without any wait
	}

	@SuppressWarnings("deprecation")
	public static void methodHavingCodeForImplicitWait() {
		WebDriverManager.chromedriver().setup();
		WebDriver driver = new ChromeDriver();
		driver.get("https://www.google.com");
		driver.manage().window().maximize();
		driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
		driver.findElement(By.xpath("abcd"));
		// It will wait for 30 seconds to find the element and if the element is not visible after 30 seconds also, then will throw the exception.
		// We can give any number of seconds in implicitWait like 30 seconds, 60 seconds, 90 seconds etc.
		// If the script is able to find the element in 4 seconds, then right after 4 seconds the script will execute the next line of code.
		// Implicit wait is not a hard code wait, it means in our case, 30 seconds is the maximum wait time but its not mandatory to wait for fixed 30 seconds.
		}
	
}

=========================================================================================================================

2) Explicit Wait :
- Explicit Wait works specifically on the element level.
- It does not work on the WebDriver level.
- We have the flexibillity in explicit wait like : On how many WebElements we need to impliment the wait.
- It is always recommended to use Explicit wait in place of implicit wait.

package createqadoc.CreateQADoc;

import java.time.Duration;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import io.github.bonigarcia.wdm.WebDriverManager;

public class UseOfExplicitWaitInSelenium {

	public static void main(String[] args) {
		methodHavingCodeForExplicitWait();
	}
	
	public static void methodWhichDoesNotHaveAnyWait() {
		WebDriverManager.chromedriver().setup();
		WebDriver driver = new ChromeDriver();
		driver.get("https://www.google.com");
		driver.manage().window().maximize();
		driver.findElement(By.xpath("abcd"));
		// After how much time we are getting this exception "NoSuchElementException".
		// It is throwing the exception without any wait
	}
	
	public static void methodHavingCodeForExplicitWait() {
		WebDriverManager.chromedriver().setup();
		WebDriver driver = new ChromeDriver();
		driver.manage().window().maximize();
		driver.get("https://www.google.com");
		
		WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(30));
		WebElement myElement =  wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(".//a[contains(text(),'Gmail')]")));
		myElement.click();
	}

}

Concept of Default Pooling Frequency in Explicit Wait: 

Pooling Frequency means in a given timeframe, after how many seconds it will check the element (condition) ?

Let's say, we are giving 30 seconds in explicit wait then after every half second (500ms) it will check the element and 
it will check the element for a maximum of 30 seconds, if the element is visible after 4 seconds, script will execute the next line of code immediately.

It means the script is not constantly checking the expected condition, it checks after every half second.
=======================================================================================================================

3) Fluent Wait : 

- It works exactly the same way as Explicit wait but there is only one additional thing, which is : we can change the pooling frequency time also.
- It is very rarely used.
- Changing the time in Pooling frequency is very rarely used.


import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.FluentWait;

import java.time.Duration;
import java.util.function.Function;

public class FluentWaitExample {
    public static void main(String[] args) {
        // Set up WebDriver
        System.setProperty("webdriver.chrome.driver", "path/to/chromedriver");
        WebDriver driver = new ChromeDriver();

        // Navigate to the website
        driver.get("https://example.com");

        // Define Fluent Wait
        FluentWait<WebDriver> wait = new FluentWait<>(driver)
                .withTimeout(Duration.ofSeconds(30)) // Maximum wait time
                .pollingEvery(Duration.ofSeconds(2)) // Check condition every 2 seconds
                .ignoring(NoSuchElementException.class); // Ignore specific exceptions

        // Define the condition to wait for
        WebElement element = wait.until(new Function<WebDriver, WebElement>() {
            public WebElement apply(WebDriver driver) {
                WebElement element = driver.findElement(By.id("elementID"));
                if (element.isDisplayed()) {
                    return element;
                }
                return null;
            }
        });

        // Interact with the element after it becomes visible
        element.click();

        // Close the browser
        driver.quit();
    }
}

========================================================================================================================

4) Java Wait (Not the selenium one) : 

Thread.sleep(timeInMilliSeconds)


- This wait does not take care of any webelement condition like visibility etc, does not wait for any driver load etc.
- It is a forced wait for some specific time given in sleep() method.
- If we are giving 2000, it means it will wait for 2 seconds irrespective of any condition.

package createqadoc.CreateQADoc;

public class UseOfThreadSleep {

	public static void main(String[] args) throws InterruptedException {
		Thread.sleep(30000);
		System.out.println("Hello World");
		// your script will always wait for 30 seconds in this case, this wait is never recommended to use.
	}

}


==========================================================================================================================

StaleElementReferenceException : 

What is StaleElementReferenceException : 
Sometimes, the element is there in the DOM (html) but still our selenim script is not able to find it, then it throws StaleElementReferenceException.

When it occurs ?
It occurs when our WebElement is not attached to the DOM (html).

How to handle it ?
- Using some waits like Explicit Wait we can handle StaleElementReferenceException.
- Refresh the page.

===========================================================================================================================

How to handle Windows in Selenium (getWindowHandle and getWindowHandles) :

package createqadoc.CreateQADoc;

import java.time.Duration;
import java.util.Set;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import io.github.bonigarcia.wdm.WebDriverManager;

public class HandleMutipleWindowsInSelenium {
	
	static WebDriver driver;

	public static void main(String[] args) throws InterruptedException {
		handleMultipleWindows();
	}
	
	public static void handleMultipleWindows() throws InterruptedException {
		WebDriverManager.chromedriver().setup();
		driver = new ChromeDriver();
		driver.get("https://demo.automationtesting.in/Windows.html");
		explicitWaitForElement(By.xpath(".//a[contains(@href,'#Seperate')]")).click();
		Thread.sleep(2000);
		explicitWaitForElement(By.xpath("(.//button[contains(text(),'click')])[2]")).click();
		
		// take current Window
		String parentWidnow = driver.getWindowHandle();
		Set<String> allWindows = driver.getWindowHandles();
		
		for(String windowHandle : allWindows) {
			if(!windowHandle.equals(parentWidnow)) {
				driver.switchTo().window(windowHandle);
				String titleOfNewWindow = driver.getTitle();
				System.out.println("titleOfNewWindow is :: " + titleOfNewWindow);
			}
		}
		driver.switchTo().window(parentWidnow);
		String titleOfParentWindow = driver.getTitle();
		System.out.println("titleOfParentWindow is :: " + titleOfParentWindow);
		driver.quit();
	}
	
	public static WebElement explicitWaitForElement(By byElement) {
		WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(30));
		WebElement myElement =  wait.until(ExpectedConditions.visibilityOfElementLocated(byElement));
		return myElement;
	}

}


=========================================================================================================================

In the same way, take one website that opens a new tab (when you click on a button).

Execute the same above piece of code for your website and you are done with handling multiple tabs in Selenium.

========================================================================================================================

Task 1 : 
Implement ImplicitWait on a Page and execute 2 invalid Xpath so that your script will wait for 30 seconds for those elements.
Make sure to catch the exception using try, catch and finally.

Task 2 : 
Implement Explicit Wait for an element that is present on child window (when we click on any button main window, one new window is opening).
And click on that element, and then switch back to the main window and click on any of the element present in main window.

========================================================================================================================

How to handle Multiple Tabs in Selenium : 

The code is same that we have used for handling multiple windows but if we need to work on some specific child window then you can add one line in the code \
and we are done.

package createqadoc.CreateQADoc;

import java.time.Duration;
import java.util.Set;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import io.github.bonigarcia.wdm.WebDriverManager;

public class HandleMultipleTabsInSelenium {
	
	static WebDriver driver;

	public static void main(String[] args) {
		handleMultipleTabs();
	}
	
	public static void handleMultipleTabs() {
		try {
		WebDriverManager.chromedriver().setup();
		driver = new ChromeDriver();
		driver.manage().window().maximize();
		driver.get("https://demo.automationtesting.in/Windows.html");
		explicitWaitForElement(driver, By.xpath(".//a[contains(text(),'Open Seperate Multiple Windows')]")).click();
		explicitWaitForElement(driver, By.xpath("(.//button[contains(text(),'click')])[3]")).click();
		
		// get parentWindow
		String parentWindow      =  driver.getWindowHandle();
		// get allWindows
		Set<String> allWindows = driver.getWindowHandles();
		
		String[] allWindowsInArray = allWindows.toArray(new String[0]);
		
		System.out.println("Total windows are :: " + allWindowsInArray.length);
		
		for(int index=0;index<allWindowsInArray.length;index++) {
			if(!allWindowsInArray[index].equalsIgnoreCase(parentWindow)) {
				driver.switchTo().window(allWindowsInArray[index]);
				System.out.println("title of Child Window is :: " + driver.getTitle());
				Thread.sleep(2000);
				if(driver.getTitle().equalsIgnoreCase("Selenium"))  {
					explicitWaitForElement(driver, By.xpath(".//span[contains(text(),'Downloads')]")).click();
					Thread.sleep(10000);
					System.out.println("title of the downloads page is :: " + driver.getTitle());
				}
				
			}
		}
		System.out.println("title of Parent Window is :: " + driver.switchTo().window(parentWindow).getTitle());
		}
		catch (Exception e) {
			System.out.println("Something went wrong : Script has not been executed successfully");
		}
		finally {
//			driver.quit();
		}
	}
	
	public static WebElement explicitWaitForElement(WebDriver driver, By byPathOfWebElement) {
		WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(30));
		WebElement myElement =  wait.until(ExpectedConditions.visibilityOfElementLocated(byPathOfWebElement));
		return myElement;
	}

}


====================================================================================================================

TimeOut Handling In Selenium : 

driver.manage().timeouts().pageLoadTimeout(Duration.ofSeconds(30));

====================================================================================================================

How to handle HTML tables in selenium : 

Simply use driver.findElements and we are done.

package createqadoc.CreateQADoc;

import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;

import io.github.bonigarcia.wdm.WebDriverManager;

public class HandleHTMLTablesInSelenium {

	public static void main(String[] args) {
		handleHTMLTables();
	}
	
	public static void handleHTMLTables() {
		
		WebDriverManager.chromedriver().setup();
		WebDriver driver = new ChromeDriver();
		driver.get("https://www.w3schools.com/html/html_tables.asp");
		List<WebElement> companyNames = driver.findElements(By.xpath(".//th[contains(text(),'Company')]/parent::tr/following-sibling::tr/td[1]"));
		System.out.println("Company Names are :: ");
		for(int count=0;count<companyNames.size();count++) {
			System.out.println(companyNames.get(count).getText());
		}
	}

}


================================================================================================================

1) Notifications Handling in selenium
2) How to scroll in selenium ?

getScreenshotAs() this is the method that we use to take the screenshot in selenium.
using javaScriptExecutor we can scroll in selenium.

How to take the Screenshot in selenium ?

package createqadoc.CreateQADoc;

import java.io.File;
import java.io.IOException;

import org.apache.commons.io.FileUtils;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;

import io.github.bonigarcia.wdm.WebDriverManager;

public class TakeScreenshotInSelenium {

	public static void main(String[] args) throws IOException {
		getScreenshotInSelenium();
	}
	
	public static void getScreenshotInSelenium() throws IOException {
		WebDriverManager.chromedriver().setup();
		WebDriver driver = new ChromeDriver();
		driver.get("https://www.guvi.in");
		
		// we are casting our driver to TakeScreenshot
		TakesScreenshot screenshot = (TakesScreenshot) driver;
		
		// We are taking the screenshot and storing it into a file
		File sourceFile = screenshot.getScreenshotAs(OutputType.FILE);
		
		// Define the destination file
		File destinationFile = new File("screenshot.png");
		
		// Copy the screenshot to the destination
		FileUtils.copyFile(sourceFile, destinationFile);
		
		System.out.println("Screenshot has been saved    " + destinationFile.getAbsolutePath());
		
	}

}

=====================================================================================================

How to scroll up and down in selenium?
How to scroll right and left in selenium ?
How to scroll in selenium by giving the webElement ?

Answer is : 
Using JavaScriptExecutor.

JavaScriptExecutor js = (JavaScriptExecutor) driver;

js.executeScript("window.scrollBy(0,100)");  // this is a vertical scroll

js.executeScript("window.scrollTo(0,0)"); // going to the top of the page

js.executeScript("window.scrollBy(100,0)"); // this is horizontal scroll

=====================================================================================================

problem solving : 

public static void clickTillMonthYear(String month, String year) {

while(
driver.findElements(By.xpath("//span[contains(text(),'"  +    month +      "')]/parent::div//span[contains(text(),'" +    year   +    "')]"))
//span[contains(text(),'      May      ')]/parent::div//span[contains(text(),'          2023       ')].size()>0) {

}

}

=======================================================================================================

1) How to handle files in selenium 
2) Notifications Handling in selenium
3) Page Object Model
4) Page Factory 
5) Why we use POM ?
6) Why we use PageFactory ?
7) How to scroll up/down in selenium ?

Task ToDo : 
Take any HTML Table from any website and find all the values (values means all texts) this HTML table has.

=========================================================================================================

Page Object Model : 

Page Object Model is a Automation Script Designing Framework.

What is framework ??

A structured format of scripts in automation.

=========================================================================================================

POM is based on the concept of page classes and test classes.

Page Classes : 
For every page in a website (that we are going to automate), we will have a separate java class.

Test Classes : 
For every page in a website (that we are going to automate), we will have a separate test class.

Page classes means we are going to locate all the elements in this class, going to create methods also. But in page class we never call any method.
Test Classes means we never locate any element in this class, we just call whatever methods that we have created in the page class.

Where is the business logic be written ??
Answer is : Always in the test class.

=========================================================================================================

package ProjectBasedOnPOM.projectBasedOnPOM;

import java.awt.RenderingHints.Key;

import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;

import io.github.bonigarcia.wdm.WebDriverManager;

public class HomePage {

	static WebDriver driver;
	
	public HomePage(WebDriver driver) {
		WebDriverManager.chromedriver().browserVersion("latest").setup();
		this.driver = new ChromeDriver();
		driver = this.driver;
	}
	
	public WebDriver getDriver() {
		return this.driver;
	}
	
	public void openUrl(String url) {
		driver.get(url);
	}
	
	public static void clickLogo() {
		driver.findElement(By.xpath(".//a[@id='nav-logo-sprites']")).click();
	}
	
	public static void searchAnItem(String item) {
		WebElement searchBox = driver.findElement(By.xpath(".//input[@id='twotabsearchtextbox']"));
		searchBox.sendKeys(item);
		searchBox.sendKeys(Keys.ENTER);
	}
	
	public static void waitForFixTime(int Time) {
		try {
			Thread.sleep(Time);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}

}





package ProjectBasedOnPOM.projectBasedOnPOM;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;

public class SearchResultPage {
	
	public String verifySearchPageResultText(WebDriver driver) {
		String txt = driver.findElement(By.xpath(".//div[@class='a-section a-spacing-small a-spacing-top-small']//span[3]")).getText();
		return txt;
	}
	
}






package ProjectBasedOnPOM.projectBasedOnPOM;

import org.openqa.selenium.WebDriver;

public class HomeTest {
	
	static WebDriver driver;
	
	public static void main(String[] args) {
		HomePage hp = new HomePage(driver);
		driver = hp.getDriver();
		hp.openUrl("https://www.amazon.in/"); // homePage
		hp.waitForFixTime(10000);
		hp.searchAnItem("Nike Shoes"); // Nike Shoe Result Page will open
		hp.waitForFixTime(4000);
		hp.clickLogo(); // HomePage will open
		hp.waitForFixTime(4000);
		
	}

}



package ProjectBasedOnPOM.projectBasedOnPOM;

import org.openqa.selenium.WebDriver;

public class SearchPageTest {

	static WebDriver driver;
	
	public static void main(String[] args) {
		
		String textToSearch = "puma shoes";
 		
		HomePage hp = new HomePage(driver);
		driver = hp.getDriver();
		hp.openUrl("https://www.amazon.in/");
		hp.waitForFixTime(10000);
		hp.searchAnItem(textToSearch);
		SearchResultPage sp = new SearchResultPage();
		String txtOnResultPage = sp.verifySearchPageResultText(driver);
		if(txtOnResultPage.contains(textToSearch)) {
			System.out.println("Landed on correct search result page");
		}
		else { 
			System.out.println("Landed on Incorrect Page");
		}
	}

}





==========================================================================================================

Page Factory : 

The simple difference between POM model and PageFactory is that we can load all the elements in one go (in PageFactory).

@FindBy (SeleniumLocatorType = "SeleniumLocatorValue")
public WebElement homePageLogo;


package ProjectBasedOnPOM.projectBasedOnPOM;

import java.awt.RenderingHints.Key;
import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.PageFactory;

import io.github.bonigarcia.wdm.WebDriverManager;

public class HomePage {

	static WebDriver driver;
	
	public HomePage(WebDriver driver) {
		WebDriverManager.chromedriver().browserVersion("latest").setup();
		this.driver = new ChromeDriver();
		driver = this.driver;
		PageFactory.initElements(driver, this);
	}
	
	@FindBy (xpath = ".//a[@id='nav-logo-sprites']")
	public static WebElement logo;
	
	@FindBy (xpath = ".//input[@id='twotabsearchtextbox']")
	public static WebElement searchBox;
	
	public WebDriver getDriver() {
		return this.driver;
	}
	
	public void openUrl(String url) {
		driver.get(url);
	}
	
	public static void clickLogo() {
		logo.click();
	}
	
	public static void searchAnItem(String item) {
		searchBox.sendKeys(item);
		searchBox.sendKeys(Keys.ENTER);
	}
	
	public static void waitForFixTime(int Time) {
		try {
			Thread.sleep(Time);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}

}


================================================================================================================

How to upload a file in Selenium : 

package createqadoc.CreateQADoc;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;

import io.github.bonigarcia.wdm.WebDriverManager;

public class UploadFileInSelenium {
	
	public static void main(String[] args) {
		uploadFile();
	}

	public static void uploadFile() {
		WebDriverManager.chromedriver().setup();
		WebDriver driver = new ChromeDriver();
		driver.get("https://demo.automationtesting.in/FileUpload.html");
		driver.findElement(By.id("input-4")).sendKeys("C:\\Users\\himanshu.kumar\\Desktop\\JavaBatchTill06Dec.txt");
	}
	
}

For multiple file upload : 
Simply Use "\n"

driver.findElement(By.id("input-4")).sendKeys("C:\\Users\\himanshu.kumar\\Desktop\\JavaBatchTill06Dec.txt") + "\n" + driver.findElement(By.id("input-4")).sendKeys("C:\\Users\\himanshu.kumar\\Desktop\\NewJavaFile.txt");

===================================================================================================================




















 
